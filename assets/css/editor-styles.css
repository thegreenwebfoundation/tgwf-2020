/**
* Sass function and mixin to use rem units with optional pixel fallback.
* Author: Pierre Burel
* Source: https://github.com/pierreburel/sass-rem
*/
/**
 * Colour variables.
*/
/* For ref */
.has-white-to-primary-gradient-background {
  background: linear-gradient(145deg, white 15%, lime 100%); }
  .has-white-to-primary-gradient-background a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):before {
    background: linear-gradient(90deg, #145314 30%, white 100%) !important; }

.has-primary-to-white-gradient-background {
  background: linear-gradient(145deg, lime 15%, white 100%); }
  .has-primary-to-white-gradient-background a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):before {
    background: linear-gradient(90deg, #145314 30%, white 100%) !important; }

/**
 * Variables for use throughout the rest of the SASS partials.
*/
/* Font definitions */
@font-face {
  font-family: 'twkeverett';
  src: url("../fonts/twkeverett/twkeverett-regular.woff2") format("woff2"), url("../fonts/twkeverett/twkeverett-regular.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'twkeverett';
  src: url("../fonts/twkeverett/twkeverett-regularitalic.woff2") format("woff2"), url("../fonts/twkeverett/twkeverett-regularitalic.woff") format("woff");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'caveatreg';
  src: url("../fonts/caveat/caveat-regular-webfont.woff2") format("woff2"), url("../fonts/caveat/caveat-regular-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

/**
 * Default typography styles and variables.
 * Overrides of key TwentyTwenty typography styles.
*/
/* Default typography styles and variables */
/**
 * Styling overrides for basic HTML elements.
*/
h1, h2, h3, h4, h5, h6 {
  font-family: "twkeverett", sans-serif; }
  h1 > a, h2 > a, h3 > a, h4 > a, h5 > a, h6 > a {
    text-decoration: none; }
    h1 > a:hover, h2 > a:hover, h3 > a:hover, h4 > a:hover, h5 > a:hover, h6 > a:hover {
      text-decoration: underline; }

h2 {
  margin-top: 2rem; }
  @media (min-width: 700px) {
    h2 {
      margin-top: 3rem; } }

h3 {
  margin-top: 2rem; }
  @media (min-width: 700px) {
    h3 {
      margin-top: 3rem; } }

h4 {
  margin-top: 1.3rem; }
  @media (min-width: 700px) {
    h4 {
      margin-top: 1.5rem; } }

p {
  margin-bottom: 1rem; }

/* Useful classes that can be reused in all sorts of great places */
.reading-width {
  max-width: 800px; }

/* Padding    */
.pt-0 {
  padding-top: 0; }

.pb-4 {
  padding-bottom: 1rem; }

/* Margin      */
.mt-0 {
  margin-top: 0; }

/* Border      */
.border-top {
  border-top: 2px solid var(--nv-text-color); }

.border-bottom, .wp-block-columns .wp-block-column > h2, .wp-block-columns .wp-block-column > h3 {
  border-bottom: 2px solid var(--nv-text-color); }

.border-right {
  border-right: 2px solid var(--nv-text-color); }

.border-left {
  border-left: 2px solid var(--nv-text-color); }

/**
 * Base layout styles.
 * These are largely going to be affected the outer most containers of each page.
*/
.entry-content > div[class*="wp-block-"] {
  margin-top: 2rem; }
  @media (min-width: 700px) {
    .entry-content > div[class*="wp-block-"] {
      margin-top: 3rem; } }
  .entry-content > div[class*="wp-block-"]:first-child {
    margin-top: 0; }
  .entry-content > div[class*="wp-block-"]:last-child {
    border: 0; }

.entry-content > div[class*="has-background"] + div[class*="has-background"],
.entry-content > div.wp-block-cover + div[class*="has-background"] {
  margin-top: 0; }

.entry-content p + .wp-block-buttons, .entry-content ol + .wp-block-buttons, .entry-content ul + .wp-block-buttons {
  margin-top: 1.5rem; }

.wp-block-buttons + h3 {
  margin-top: 2rem; }

h2 + h3 {
  margin-top: 1rem; }

/* Basic layout functions, widths etc */
.alignwide {
  width: 100%;
  max-width: 100%;
  margin-left: auto; }
  @media (min-width: 1170px) {
    .alignwide {
      width: 1170px;
      margin-left: calc( 50% - ( 1170px / 2 ));
      padding-left: 15px;
      padding-right: 15px; } }

/* Override Neve inline styles */
@media (min-width: 960px) {
  #content.neve-main .container .alignfull > [class*="__inner-container"],
  #content.neve-main .container .alignwide > [class*="__inner-container"] {
    width: 100%;
    max-width: 100%;
    margin-left: auto; } }

@media (min-width: 1170px) {
  #content.neve-main .container .alignfull > [class*="__inner-container"],
  #content.neve-main .container .alignwide > [class*="__inner-container"] {
    max-width: 1170px; } }

/** Common styles in the Neve theme that we'd like to overwrite. */
.nv-index-posts,
.nv-single-page-wrap,
.nv-single-post-wrap {
  margin-bottom: 0; }

.nv-page-title-wrap.nv-big-title .nv-page-title {
  border-width: 0;
  margin: 1rem 0; }
  @media (min-width: 576px) {
    .nv-page-title-wrap.nv-big-title .nv-page-title {
      margin: 2rem 0; } }

.nv-content-wrap {
  margin-top: 1rem; }
  @media (min-width: 576px) {
    .nv-content-wrap {
      margin-top: 2rem; } }
  .nv-content-wrap > *:last-child {
    margin-bottom: 2rem; }
    @media (min-width: 576px) {
      .nv-content-wrap > *:last-child {
        margin-bottom: 3rem; } }

.nv-page-title-wrap + .nv-content-wrap {
  margin-top: 0; }

.nv-comment-content a,
.nv-content-wrap a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link),
.wp-block-post-content a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link),
.entry-summary a,
.fellowship-post__content-widget-container a,
.nv-post-navigation a {
  color: var(--nv-text-color);
  text-decoration: none;
  background-image: linear-gradient(270deg, lime 30%, #145314 100%);
  background-repeat: repeat-x;
  background-size: 100% 2px;
  background-position: 0 95%; }
  .nv-comment-content a:hover,
  .nv-content-wrap a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover,
  .wp-block-post-content a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover,
  .entry-summary a:hover,
  .fellowship-post__content-widget-container a:hover,
  .nv-post-navigation a:hover {
    color: white;
    background: var(--nv-text-color); }

/**
 * Custom clasess that can be applied to Gutenberg blocks.
*/
/* 1. GENERAL CLASSES     */
/* 2. COLOUR CLASSES      */
/* 1. GENERAL CLASSES     */
.alignfull > [class*="__inner-container"],
.alignwide > [class*="__inner-container"] {
  margin: auto; }

@media (min-width: 960px) {
  .alignfull > [class*="__inner-container"] {
    max-width: 70%; } }

/* 2. COLOUR CLASSES      */
/**
 * Customisations for the group block.
*/
/* 1. GENERAL BLOCK CUSTOMISATIONS */
/* 2. CUSTOM CLASSES               */
/* 1. GENERAL BLOCK CUSTOMISATIONS */
.entry-content > .wp-block-group {
  border-top: 4px solid var(--nv-text-color);
  border-bottom: 4px solid var(--nv-text-color); }

.wp-block-group[class*="has-background"] > * {
  padding: 3rem 0; }

.wp-block-group .wp-block-group__inner-container > h2:first-of-type, .wp-block-group .wp-block-group__inner-container > 3:first-of-type, .wp-block-group .wp-block-group__inner-container > h4:first-of-type {
  margin-top: 1rem; }

.wp-block-group.gradient-outline {
  background: linear-gradient(135deg, #eeeeee 0%, #c0c9bf 100%);
  padding: 0.25rem; }
  .wp-block-group.gradient-outline:nth-of-type(even) {
    background: linear-gradient(135deg, #c0c9bf 0%, #eeeeee 100%); }
  .wp-block-group.gradient-outline .wp-block-group__inner-container {
    background: white;
    padding: 1rem; }
    .wp-block-group.gradient-outline .wp-block-group__inner-container > h2:first-of-type, .wp-block-group.gradient-outline .wp-block-group__inner-container > h3:first-of-type, .wp-block-group.gradient-outline .wp-block-group__inner-container > h4:first-of-type {
      margin-top: 0; }

/**
 * Tweaks and changes for the default Gutenberg cover block.
 * In this site, we expect the block to be inside the group block.
*/
.wp-block-cover.hide-image-on-mobile img {
  display: none; }
  @media (min-width: 700px) {
    .wp-block-cover.hide-image-on-mobile img {
      display: block; } }

@media (max-width: 699.98px) {
  .wp-block-cover.hide-bg-on-mobile .wp-block-cover__background {
    background: none !important; } }

/**
 * Customsations to the columns layout
*/
.wp-block-columns .wp-block-column {
  margin-bottom: 2rem; }
  @media screen and (min-width: 782px) {
    .wp-block-columns .wp-block-column {
      border-right: 2px solid var(--nv-text-color);
      padding-right: 2rem; } }
  .wp-block-columns .wp-block-column:last-of-type {
    border: none; }
  .wp-block-columns .wp-block-column > *:first-child {
    margin-top: 0; }
  .wp-block-columns .wp-block-column > h2, .wp-block-columns .wp-block-column > h3 {
    text-transform: uppercase;
    width: 100%; }
  .wp-block-columns .wp-block-column p {
    padding: 1rem 0 0 0;
    margin: 0; }

.wp-block-columns.gwf-columns__title-para-button .wp-block-column > h2, .wp-block-columns.gwf-columns__title-para-button .wp-block-column > h3 {
  border: none; }

.wp-block-columns.gwf-columns__title-para-button .wp-block-column .wp-block-group {
  border-bottom: solid 2px black; }
  .wp-block-columns.gwf-columns__title-para-button .wp-block-column .wp-block-group > * > *:first-child {
    margin-top: 0;
    text-transform: uppercase; }

@media screen and (min-width: 782px) {
  .wp-block-columns.gwf-columns__title-para-button .wp-block-column {
    display: flex;
    flex-direction: column;
    justify-content: center; }
    .wp-block-columns.gwf-columns__title-para-button .wp-block-column .wp-block-group {
      min-height: 5.625rem; }
      .wp-block-columns.gwf-columns__title-para-button .wp-block-column .wp-block-group > * {
        display: flex;
        align-items: center;
        height: 100%;
        margin: 0 !important; }
    .wp-block-columns.gwf-columns__title-para-button .wp-block-column .wp-block-buttons {
      flex: 1 0 auto; } }

/**
 * Customisations for gutenberg button blocks.
*/
.wp-block-buttons {
  margin-top: 1rem;
  margin-bottom: 1rem; }

.wp-block-button__link:hover {
  background-color: var(--nv-site-bg); }

/* Styling for the blockquote (quotes) block */
blockquote::after,
blockquote::before {
  display: none; }

blockquote.wp-block-quote {
  border-left: 2px solid #00FF00;
  font-family: "caveatreg", cursive;
  font-weight: 700; }
  blockquote.wp-block-quote > * {
    padding: 1rem; }
  blockquote.wp-block-quote p:first-of-type {
    padding-top: 0; }
  blockquote.wp-block-quote cite {
    font-family: "twkeverett", sans-serif;
    color: #4ADE4A;
    padding-top: 0;
    padding-bottom: 0; }
    blockquote.wp-block-quote cite::before {
      content: '- ';
      display: inline-block;
      width: 1em;
      height: 1rem; }
  blockquote.wp-block-quote.is-style-large {
    padding: 0;
    margin-bottom: 40px; }
    @media (max-width: 699.98px) {
      blockquote.wp-block-quote.is-style-large p {
        font-size: 1.4rem; } }
    blockquote.wp-block-quote.is-style-large cite {
      text-align: left; }
    @media (min-width: 700px) {
      blockquote.wp-block-quote.is-style-large {
        padding-left: 1rem; } }
  blockquote.wp-block-quote.is-style-default p {
    font-size: 1.3em; }

/* 1. GENERAL             */
/* 2. QUESTION STYLING    */
/* 3. ANSWER STYLING      */
.schema-faq-section {
  position: relative; }
  .schema-faq-section:hover {
    cursor: pointer; }
  .schema-faq-section:before {
    display: block;
    content: '';
    width: 100%;
    height: 1px;
    margin: 1rem 0;
    background-color: #158015; }
    @media (min-width: 700px) {
      .schema-faq-section:before {
        margin: 2rem 0; } }
    .block-editor-block-list__block .schema-faq-section:before {
      background-color: transparent;
      margin-top: 0; }
  .schema-faq-section:last-of-type {
    padding-bottom: 1rem;
    margin-bottom: 1rem;
    border-bottom: 1px solid #158015; }
    @media (min-width: 700px) {
      .schema-faq-section:last-of-type {
        padding-bottom: 2rem;
        margin-bottom: 2rem; } }

/* 2. QUESTION STYLING    */
.schema-faq-question {
  display: block;
  padding-right: 2.2rem;
  margin-bottom: 0.6rem;
  font-family: "twkeverett", sans-serif;
  font-size: 1.5em;
  line-height: 1.3; }
  .schema-faq-question:not(.block-editor-rich-text__editable):after {
    content: '';
    position: absolute;
    top: 1.3rem;
    right: 0;
    height: 30px;
    width: 30px;
    transform: rotate(0deg);
    transition: transform 0.3s linear;
    background-image: url("../img/caret-down.svg");
    background-size: 30px 30px;
    background-repeat: no-repeat;
    background-position: center center; }
    @media (min-width: 700px) {
      .schema-faq-question:not(.block-editor-rich-text__editable):after {
        top: 2.3rem; } }
  .is-open .schema-faq-question:not(.block-editor-rich-text__editable)::after {
    transform: rotate(180deg); }

/* 3. ANSWER STYLING    */
.schema-faq-answer:not(.block-editor-rich-text__editable) {
  display: none;
  margin: 1rem 0; }
  .is-open .schema-faq-answer:not(.block-editor-rich-text__editable) {
    display: block; }

.schema-faq-answer.block-editor-rich-text__editable {
  margin-bottom: 2rem !important; }

.schema-faq-section:last-of-type .schema-faq-answer:not(.block-editor-rich-text__editable) {
  margin-bottom: 0; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
