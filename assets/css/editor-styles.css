/**
* Sass function and mixin to use rem units with optional pixel fallback.
* Author: Pierre Burel
* Source: https://github.com/pierreburel/sass-rem
*/
/**
 * Colour variables.
*/
/* For ref */
.has-white-to-primary-gradient-background {
  background: linear-gradient(145deg, white 15%, lime 100%); }
  .has-white-to-primary-gradient-background a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link),
  .has-white-to-primary-gradient-background + div a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link) {
    background-image: linear-gradient(90deg, black 30%, white 100%) !important; }
    .has-white-to-primary-gradient-background a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover,
    .has-white-to-primary-gradient-background + div a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover {
      background: var(--nv-text-color) !important; }

.has-primary-to-white-gradient-background {
  background: linear-gradient(145deg, lime 15%, white 100%); }
  .has-primary-to-white-gradient-background a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link),
  .has-primary-to-white-gradient-background + div a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link) {
    background-image: linear-gradient(90deg, black 30%, white 100%) !important; }
    .has-primary-to-white-gradient-background a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover,
    .has-primary-to-white-gradient-background + div a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover {
      background: var(--nv-text-color) !important; }

.has-white-to-blue-gradient-background {
  background: linear-gradient(145deg, white 15%, #0066ff 100%); }
  .has-white-to-blue-gradient-background a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link),
  .has-white-to-blue-gradient-background + div a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link) {
    background-image: linear-gradient(90deg, black 30%, white 100%) !important; }
    .has-white-to-blue-gradient-background a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover,
    .has-white-to-blue-gradient-background + div a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover {
      background: var(--nv-text-color) !important; }

.has-white-to-orange-gradient-background {
  background: linear-gradient(145deg, white 15%, #faaa00 100%); }
  .has-white-to-orange-gradient-background a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link),
  .has-white-to-orange-gradient-background + div a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link) {
    background-image: linear-gradient(90deg, black 30%, white 100%) !important; }
    .has-white-to-orange-gradient-background a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover,
    .has-white-to-orange-gradient-background + div a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover {
      background: var(--nv-text-color) !important; }

/**
 * Variables for use throughout the rest of the SASS partials.
*/
/* Font definitions */
@font-face {
  font-family: 'twkeverett';
  src: url("../fonts/twkeverett/twkeverett-regular.woff2") format("woff2"), url("../fonts/twkeverett/twkeverett-regular.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'twkeverett';
  src: url("../fonts/twkeverett/twkeverett-regularitalic.woff2") format("woff2"), url("../fonts/twkeverett/twkeverett-regularitalic.woff") format("woff");
  font-weight: normal;
  font-style: italic; }

/**
 * Default typography styles and variables.
 * Overrides of key TwentyTwenty typography styles.
*/
/* Default typography styles and variables */
/**
 * Styling overrides for basic HTML elements.
*/
body {
  word-wrap: break-word; }

h1, h2, h3, h4, h5, h6 {
  font-family: "twkeverett", sans-serif; }
  h1 > a, h2 > a, h3 > a, h4 > a, h5 > a, h6 > a {
    text-decoration: none; }
    h1 > a:hover, h2 > a:hover, h3 > a:hover, h4 > a:hover, h5 > a:hover, h6 > a:hover {
      text-decoration: underline; }

h2 {
  margin-top: 2rem; }
  @media (min-width: 700px) {
    h2 {
      margin-top: 3rem; } }

h3 {
  margin-top: 2rem; }
  @media (min-width: 700px) {
    h3 {
      margin-top: 3rem; } }

h4 {
  margin-top: 1.3rem; }
  @media (min-width: 700px) {
    h4 {
      margin-top: 1.5rem; } }

p {
  margin-bottom: 1rem; }

/* Useful classes that can be reused in all sorts of great places */
.reading-width {
  max-width: 800px;
  margin-left: auto;
  margin-right: auto; }

.hide-image-on-mobile img {
  display: none; }
  @media (min-width: 700px) {
    .hide-image-on-mobile img {
      display: block; } }

/* Padding    */
.pt-0 {
  padding-top: 0; }

.pb-0, .no-padding-bottom {
  padding-bottom: 0 !important; }

.pb-4 {
  padding-bottom: 1rem; }

.px-0 {
  padding-left: 0 !important;
  padding-right: 0 !important; }

/* Margin      */
.mt-0, .no-margin-top {
  margin-top: 0 !important; }

.mb-0, .no-margin-bottom {
  margin-bottom: 0 !important; }

/* Border      */
.no-border-top {
  border-top: none !important; }

.no-border-bottom {
  border-bottom: none !important; }

.border-top {
  border-top: 2px solid var(--nv-text-color); }

.border-bottom, .wp-block-columns .wp-block-column > h2, .wp-block-columns .wp-block-column > h3 {
  border-bottom: 2px solid var(--nv-text-color); }

.border-right {
  border-right: 2px solid var(--nv-text-color); }

.border-left {
  border-left: 2px solid var(--nv-text-color); }

/**
 * Base layout styles.
 * These are largely going to be affected the outer most containers of each page.
*/
.entry-content > div[class*="wp-block-"] {
  margin-top: 2rem; }
  @media (min-width: 700px) {
    .entry-content > div[class*="wp-block-"] {
      margin-top: 3rem; } }
  .entry-content > div[class*="wp-block-"]:first-child {
    margin-top: 0; }
  .entry-content > div[class*="wp-block-"]:last-child {
    border: 0; }
  .entry-content > div[class*="wp-block-"] > div[class*="__inner-container"] {
    padding-top: 2rem;
    padding-bottom: 2rem; }
    @media (min-width: 700px) {
      .entry-content > div[class*="wp-block-"] > div[class*="__inner-container"] {
        padding-top: 3rem;
        padding-bottom: 3rem; } }
    .entry-content > div[class*="wp-block-"] > div[class*="__inner-container"] > h2:first-of-type,
    .entry-content > div[class*="wp-block-"] > div[class*="__inner-container"] > h3:first-of-type,
    .entry-content > div[class*="wp-block-"] > div[class*="__inner-container"] > h4:first-of-type {
      margin-top: 0; }

.entry-content > div[class*="has-background"] + div[class*="has-background"],
.entry-content > div.wp-block-cover + div[class*="has-background"] {
  margin-top: 0; }

.entry-content p + .wp-block-buttons, .entry-content ol + .wp-block-buttons, .entry-content ul + .wp-block-buttons {
  margin-top: 1.5rem; }

.entry-content > .wp-block-cover + p, .entry-content > .wp-block-cover + ol, .entry-content > .wp-block-cover + ul,
.entry-content > .wp-block-cover + figure,
.entry-content > .wp-block-group + p,
.entry-content > .wp-block-group + ol,
.entry-content > .wp-block-group + ul,
.entry-content > .wp-block-group + figure {
  margin-top: 2rem; }
  @media (min-width: 700px) {
    .entry-content > .wp-block-cover + p, .entry-content > .wp-block-cover + ol, .entry-content > .wp-block-cover + ul,
    .entry-content > .wp-block-cover + figure,
    .entry-content > .wp-block-group + p,
    .entry-content > .wp-block-group + ol,
    .entry-content > .wp-block-group + ul,
    .entry-content > .wp-block-group + figure {
      margin-top: 3rem; } }

.wp-block-buttons + h3 {
  margin-top: 2rem; }

h2 + h3 {
  margin-top: 1rem; }

p + h2,
.wp-block-buttons + h2 {
  margin-top: 2rem; }
  @media (min-width: 700px) {
    p + h2,
    .wp-block-buttons + h2 {
      margin-top: 4rem; } }

/* Basic layout functions, widths etc */
.alignwide {
  width: 100%;
  max-width: 100%;
  margin-left: auto;
  margin-right: auto; }
  @media (min-width: 700px) {
    .alignwide {
      width: 100vw;
      max-width: 100vw;
      margin-left: calc( 50% - 50vw);
      margin-right: calc( 50% - 50vw);
      padding-left: 15px;
      padding-right: 15px; } }
  @media (min-width: 1170px) {
    .alignwide {
      width: 1170px;
      max-width: none;
      margin-left: calc( 50% - ( 1170px / 2 )); } }

/* Override Neve inline styles */
#content.neve-main .container .alignfull > [class*="__inner-container"],
#content.neve-main .container .alignwide > [class*="__inner-container"] {
  padding-left: 15px;
  padding-right: 15px; }
  @media (min-width: 960px) {
    #content.neve-main .container .alignfull > [class*="__inner-container"],
    #content.neve-main .container .alignwide > [class*="__inner-container"] {
      width: 100%;
      max-width: 100%;
      margin-left: auto; } }
  @media (min-width: 1170px) {
    #content.neve-main .container .alignfull > [class*="__inner-container"],
    #content.neve-main .container .alignwide > [class*="__inner-container"] {
      max-width: 1170px; } }

/** Common styles in the Neve theme that we'd like to overwrite. */
.nv-index-posts,
.nv-single-page-wrap,
.nv-single-post-wrap {
  margin-top: 0;
  margin-bottom: 0; }

.nv-index-posts .nv-page-title-wrap,
.nv-page-title-wrap {
  margin-top: 2rem; }
  @media (min-width: 700px) {
    .nv-index-posts .nv-page-title-wrap,
    .nv-page-title-wrap {
      margin-top: 4rem; } }
  .nv-index-posts .nv-page-title-wrap.nv-big-title .nv-page-title,
  .nv-page-title-wrap.nv-big-title .nv-page-title {
    border-width: 0; }

.nv-content-wrap {
  margin-top: 2rem; }
  @media (min-width: 576px) {
    .nv-content-wrap {
      margin-top: 4rem; } }
  .nv-content-wrap > *:last-child {
    margin-bottom: 2rem; }
    @media (min-width: 576px) {
      .nv-content-wrap > *:last-child {
        margin-bottom: 3rem; } }

.nv-page-title-wrap + .nv-content-wrap {
  margin-top: 0; }

.nv-comment-content a,
.nv-content-wrap a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link),
.wp-block-post-content a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link),
.fellowship-post__content-widget-container a,
.nv-post-navigation a {
  color: var(--nv-text-color);
  text-decoration: none;
  background-image: linear-gradient(270deg, lime 30%, #145314 100%);
  background-repeat: repeat-x;
  background-size: 100% 2px;
  background-position: 0 95%; }
  .nv-comment-content a:hover,
  .nv-content-wrap a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover,
  .wp-block-post-content a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover,
  .fellowship-post__content-widget-container a:hover,
  .nv-post-navigation a:hover {
    color: white;
    background: var(--nv-text-color); }

/**
 * Custom clasess that can be applied to Gutenberg blocks.
*/
/* 1. GENERAL CLASSES     */
/* 2. COLOUR CLASSES      */
/* 1. GENERAL CLASSES     */
.alignfull {
  padding-right: 0;
  padding-left: 0; }

.alignfull > [class*="__inner-container"],
.alignwide > [class*="__inner-container"] {
  margin-left: auto;
  margin-right: auto; }

@media (min-width: 960px) {
  .alignfull > [class*="__inner-container"] {
    max-width: 70%; } }

/* 2. COLOUR CLASSES      */
/**
 * Customisations for the group block.
*/
/* 1. GENERAL BLOCK CUSTOMISATIONS */
/* 2. CUSTOM CLASSES               */
/* 1. GENERAL BLOCK CUSTOMISATIONS */
.entry-content > .wp-block-group:not(.no-border) {
  border-top: 2px solid var(--nv-text-color);
  border-bottom: 2px solid var(--nv-text-color); }

.wp-block-group.gradient-outline {
  background: linear-gradient(135deg, #eeeeee 0%, #c0c9bf 100%);
  padding: 0.25rem; }
  .wp-block-group.gradient-outline:nth-of-type(even) {
    background: linear-gradient(135deg, #c0c9bf 0%, #eeeeee 100%); }
  .wp-block-group.gradient-outline .wp-block-group__inner-container {
    background: white;
    padding: 1rem; }
    .wp-block-group.gradient-outline .wp-block-group__inner-container > h2:first-of-type, .wp-block-group.gradient-outline .wp-block-group__inner-container > h3:first-of-type, .wp-block-group.gradient-outline .wp-block-group__inner-container > h4:first-of-type {
      margin-top: 0; }

/**
 * Tweaks and changes for the default Gutenberg cover block.
 * In this site, we expect the block to be inside the group block.
*/
.wp-block-cover {
  border-bottom: solid 2px black; }
  .wp-block-cover.hide-image-on-mobile img {
    display: none; }
    @media (min-width: 700px) {
      .wp-block-cover.hide-image-on-mobile img {
        display: block; } }
  @media (max-width: 699.98px) {
    .wp-block-cover.hide-bg-on-mobile .wp-block-cover__background {
      background: none !important; } }

/**
 * Customsations to the columns layout
*/
@media screen and (min-width: 782px) {
  .wp-block-columns:not(.no-border) .wp-block-column {
    border-right: 2px solid var(--nv-text-color);
    padding-right: 2rem; } }

.wp-block-columns:not(.no-border) .wp-block-column:last-of-type {
  border: none; }

.wp-block-columns .wp-block-column {
  margin-bottom: 2rem; }
  .wp-block-columns .wp-block-column > *:first-child {
    margin-top: 0; }
  .wp-block-columns .wp-block-column > h2, .wp-block-columns .wp-block-column > h3 {
    text-transform: uppercase;
    width: 100%; }
  .wp-block-columns .wp-block-column p {
    padding: 1rem 0 0 0;
    margin: 0; }
  @media (min-width: 700px) {
    .wp-block-columns .wp-block-column .hide-image-on-mobile img {
      display: none; } }
  @media screen and (min-width: 782px) {
    .wp-block-columns .wp-block-column .hide-image-on-mobile img {
      display: block; } }

/**
 * Customisations for gutenberg button blocks.
*/
.wp-block-buttons {
  margin-top: 1rem;
  margin-bottom: 1rem; }

.wp-block-button__link {
  min-height: 3rem;
  border: 2px solid black !important; }
  .wp-block-button__link:hover {
    background-color: var(--nv-site-bg);
    color: var(--nv-text-color); }

/* Styling for the blockquote (quotes) block */
/* 1. BLOCKQUOTE     */
/* 2. PULLQUOTE      */
/* 1. BLOCKQUOTE     */
blockquote::after,
blockquote::before {
  display: none; }

blockquote.wp-block-quote {
  border-left: 4px solid #00FF00;
  font-weight: 700;
  padding-bottom: 1rem !important; }
  blockquote.wp-block-quote > * {
    padding: 1rem; }
  blockquote.wp-block-quote em {
    font-style: normal; }
  blockquote.wp-block-quote cite {
    font-family: "twkeverett", sans-serif;
    color: #4ADE4A;
    padding-top: 0;
    padding-bottom: 0; }
    blockquote.wp-block-quote cite::before {
      content: '- ';
      display: inline-block;
      width: 1em;
      height: 1rem;
      margin-right: 0.5rem; }
  blockquote.wp-block-quote.is-style-large {
    padding: 0; }
    @media (max-width: 699.98px) {
      blockquote.wp-block-quote.is-style-large p {
        font-size: 1.4rem; } }
    blockquote.wp-block-quote.is-style-large cite {
      text-align: left; }
    @media (min-width: 700px) {
      blockquote.wp-block-quote.is-style-large {
        padding-left: 1rem; } }
  blockquote.wp-block-quote.is-style-default p {
    font-size: 1.3em; }

/* 2. PULLQUOTE      */
.wp-block-pullquote {
  font-size: var(--wp--preset--font-size--medium);
  border-top-color: #00FF00;
  border-bottom-color: #00FF00;
  margin-top: 2rem;
  margin-bottom: 2rem; }
  @media (min-width: 700px) {
    .wp-block-pullquote {
      margin-top: 4rem;
      margin-bottom: 4rem; } }

/* 1. GENERAL             */
/* 2. QUESTION STYLING    */
/* 3. ANSWER STYLING      */
.schema-faq-section {
  position: relative; }
  .schema-faq-section:hover {
    cursor: pointer; }
  .schema-faq-section:before {
    display: block;
    content: '';
    width: 100%;
    height: 1px;
    margin: 1rem 0;
    background-color: var(--nv-primary-accent); }
    @media (min-width: 700px) {
      .schema-faq-section:before {
        margin: 2rem 0; } }
    .block-editor-block-list__block .schema-faq-section:before {
      background-color: transparent;
      margin-top: 0; }
  .schema-faq-section:last-of-type {
    padding-bottom: 1rem;
    margin-bottom: 1rem;
    border-bottom: 1px solid var(--nv-primary-accent); }
    @media (min-width: 700px) {
      .schema-faq-section:last-of-type {
        padding-bottom: 2rem;
        margin-bottom: 2rem; } }

/* 2. QUESTION STYLING    */
.schema-faq-question {
  display: block;
  padding-right: 2.2rem;
  margin-bottom: 0.6rem;
  font-family: "twkeverett", sans-serif;
  line-height: 1.3; }
  .schema-faq-question:not(.block-editor-rich-text__editable):after {
    content: '';
    position: absolute;
    top: 1.3rem;
    right: 0;
    height: 30px;
    width: 30px;
    transform: rotate(0deg);
    transition: transform 0.3s linear;
    background-image: url("../img/caret-down.svg");
    background-size: 30px 30px;
    background-repeat: no-repeat;
    background-position: center center; }
    @media (min-width: 700px) {
      .schema-faq-question:not(.block-editor-rich-text__editable):after {
        top: 2.3rem; } }
  .is-open .schema-faq-question:not(.block-editor-rich-text__editable)::after {
    transform: rotate(180deg); }

/* 3. ANSWER STYLING    */
.schema-faq-answer:not(.block-editor-rich-text__editable) {
  display: none;
  margin: 1rem 0; }
  .is-open .schema-faq-answer:not(.block-editor-rich-text__editable) {
    display: block; }

.schema-faq-answer.block-editor-rich-text__editable {
  margin-bottom: 2rem !important; }

.schema-faq-section:last-of-type .schema-faq-answer:not(.block-editor-rich-text__editable) {
  margin-bottom: 0; }

/* Styles for default embed block, eg for videos */
.wp-block-embed {
  margin: 2rem 0; }
  @media (min-width: 700px) {
    .wp-block-embed {
      margin: 4rem 0; } }

/* Styling and customisations for images. */
.wp-block-image figure > a {
  background-image: none !important; }
  .wp-block-image figure > a:hover {
    background: none !important; }

/* Styling customisations for the default separator block. */
hr.wp-block-separator {
  margin-top: 2rem; }
  @media (min-width: 700px) {
    hr.wp-block-separator {
      margin-top: 3rem; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UvX3JlbS5zY3NzIiwiZWRpdG9yLXN0eWxlcy5jc3MiLCJiYXNlL19jb2xvdXJzLnNjc3MiLCJiYXNlL192YXJpYWJsZXMuc2NzcyIsImJhc2UvX2ZvbnRzLnNjc3MiLCJiYXNlL190eXBvZ3JhcGh5LnNjc3MiLCJiYXNlL19odG1sZWxlbWVudHMuc2NzcyIsImJvb3RzdHJhcC9taXhpbnMvX2JyZWFrcG9pbnRzLnNjc3MiLCJiYXNlL191dGlsaXRpZXMuc2NzcyIsImJhc2UvX2Zsb3cuc2NzcyIsImJhc2UvX2xheW91dC5zY3NzIiwiYmFzZS9fbmV2ZS1iYXNpYy1zdHlsZXMuc2NzcyIsImJsb2Nrcy9fdXRpbGl0eS1jbGFzc2VzLnNjc3MiLCJibG9ja3MvX2Jsb2NrLWdyb3VwLnNjc3MiLCJibG9ja3MvX2Jsb2NrLWNvdmVyLnNjc3MiLCJibG9ja3MvX2Jsb2NrLWNvbHVtbnMuc2NzcyIsImJsb2Nrcy9fYmxvY2stYnV0dG9uLnNjc3MiLCJibG9ja3MvX2Jsb2NrLWJsb2NrcXVvdGUtYW5kLXB1bGxxdW90ZS5zY3NzIiwiYmxvY2tzL19ibG9jay15b2FzdC1mYXEuc2NzcyIsImJsb2Nrcy9fYmxvY2stZW1iZWQuc2NzcyIsImJsb2Nrcy9fYmxvY2staW1hZ2Uuc2NzcyIsImJsb2Nrcy9fYmxvY2stc2VwYXJhdG9yLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Q0NJQztBQ0pEOztDRE9DO0FDSEQsWUFBQTtBQTJCQTtFQUNDLHlEQUE0RSxFQUFBO0VBRDdFOztJQU1FLDBFQUFrRyxFQUFBO0lBTnBHOztNQVNHLDJDQUEyQyxFQUFBOztBQUs5QztFQUNDLHlEQUE0RSxFQUFBO0VBRDdFOztJQU1FLDBFQUFrRyxFQUFBO0lBTnBHOztNQVNHLDJDQUEyQyxFQUFBOztBQUs5QztFQUNDLDREQUE4RSxFQUFBO0VBRC9FOztJQU1FLDBFQUFrRyxFQUFBO0lBTnBHOztNQVNHLDJDQUEyQyxFQUFBOztBQUs5QztFQUNDLDREQUE4RSxF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RywyQkFBMkIsRUFBQTs7QUNQOUIsNERBQUE7QUFFQTtFQUNDLGdCbEJhb0IsRUFBQTtFSTRDakI7SWMxREo7TUFJRSxnQmxCV2tCLEVBQUEsRWtCVG5CIiwiZmlsZSI6ImVkaXRvci1zdHlsZXMuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4qIFNhc3MgZnVuY3Rpb24gYW5kIG1peGluIHRvIHVzZSByZW0gdW5pdHMgd2l0aCBvcHRpb25hbCBwaXhlbCBmYWxsYmFjay5cbiogQXV0aG9yOiBQaWVycmUgQnVyZWxcbiogU291cmNlOiBodHRwczovL2dpdGh1Yi5jb20vcGllcnJlYnVyZWwvc2Fzcy1yZW1cbiovXG5cbiRyZW0tYmFzZWxpbmU6IDE2cHggIWRlZmF1bHQ7XG4kcmVtLWZhbGxiYWNrOiBmYWxzZSAhZGVmYXVsdDtcbiRyZW0tcHgtb25seTogZmFsc2UgIWRlZmF1bHQ7XG5cbkBmdW5jdGlvbiByZW0tc2VwYXJhdG9yKCRsaXN0LCAkc2VwYXJhdG9yOiBmYWxzZSkge1xuICBAaWYgJHNlcGFyYXRvciA9PSBcImNvbW1hXCIgb3IgJHNlcGFyYXRvciA9PSBcInNwYWNlXCIge1xuICAgIEByZXR1cm4gYXBwZW5kKCRsaXN0LCBudWxsLCAkc2VwYXJhdG9yKTtcbiAgfSBcbiAgXG4gIEBpZiBmdW5jdGlvbi1leGlzdHMoXCJsaXN0LXNlcGFyYXRvclwiKSA9PSB0cnVlIHtcbiAgICBAcmV0dXJuIGxpc3Qtc2VwYXJhdG9yKCRsaXN0KTtcbiAgfVxuXG4gIC8vIGxpc3Qtc2VwYXJhdG9yIHBvbHlmaWxsIGJ5IEh1Z28gR2lyYXVkZWwgKGh0dHBzOi8vc2Fzcy1jb21wYXRpYmlsaXR5LmdpdGh1Yi5pby8jbGlzdF9zZXBhcmF0b3JfZnVuY3Rpb24pXG4gICR0ZXN0LWxpc3Q6ICgpO1xuICBAZWFjaCAkaXRlbSBpbiAkbGlzdCB7XG4gICAgJHRlc3QtbGlzdDogYXBwZW5kKCR0ZXN0LWxpc3QsICRpdGVtLCBzcGFjZSk7XG4gIH1cblxuICBAcmV0dXJuIGlmKCR0ZXN0LWxpc3QgPT0gJGxpc3QsIHNwYWNlLCBjb21tYSk7XG59XG5cbkBtaXhpbiByZW0tYmFzZWxpbmUoJHpvb206IDEwMCUpIHtcbiAgZm9udC1zaXplOiAkem9vbSAvIDE2cHggKiAkcmVtLWJhc2VsaW5lO1xufVxuXG5AZnVuY3Rpb24gcmVtLWNvbnZlcnQoJHRvLCAkdmFsdWVzLi4uKSB7XG4gICRyZXN1bHQ6ICgpO1xuICAkc2VwYXJhdG9yOiByZW0tc2VwYXJhdG9yKCR2YWx1ZXMpO1xuICBcbiAgQGVhY2ggJHZhbHVlIGluICR2YWx1ZXMge1xuICAgIEBpZiB0eXBlLW9mKCR2YWx1ZSkgPT0gXCJudW1iZXJcIiBhbmQgdW5pdCgkdmFsdWUpID09IFwicmVtXCIgYW5kICR0byA9PSBcInB4XCIge1xuICAgICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICR2YWx1ZSAvIDFyZW0gKiAkcmVtLWJhc2VsaW5lLCAkc2VwYXJhdG9yKTtcbiAgICB9IEBlbHNlIGlmIHR5cGUtb2YoJHZhbHVlKSA9PSBcIm51bWJlclwiIGFuZCB1bml0KCR2YWx1ZSkgPT0gXCJweFwiIGFuZCAkdG8gPT0gXCJyZW1cIiB7XG4gICAgICAkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgJHZhbHVlIC8gJHJlbS1iYXNlbGluZSAqIDFyZW0sICRzZXBhcmF0b3IpO1xuICAgIH0gQGVsc2UgaWYgdHlwZS1vZigkdmFsdWUpID09IFwibGlzdFwiIHtcbiAgICAgICR2YWx1ZS1zZXBhcmF0b3I6IHJlbS1zZXBhcmF0b3IoJHZhbHVlKTtcbiAgICAgICR2YWx1ZTogcmVtLWNvbnZlcnQoJHRvLCAkdmFsdWUuLi4pO1xuICAgICAgJHZhbHVlOiByZW0tc2VwYXJhdG9yKCR2YWx1ZSwgJHZhbHVlLXNlcGFyYXRvcik7XG4gICAgICAkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgJHZhbHVlLCAkc2VwYXJhdG9yKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCAkdmFsdWUsICRzZXBhcmF0b3IpO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gaWYobGVuZ3RoKCRyZXN1bHQpID09IDEsIG50aCgkcmVzdWx0LCAxKSwgJHJlc3VsdCk7XG59XG5cbkBmdW5jdGlvbiByZW0oJHZhbHVlcy4uLikge1xuICBAaWYgJHJlbS1weC1vbmx5IHtcbiAgICBAcmV0dXJuIHJlbS1jb252ZXJ0KHB4LCAkdmFsdWVzLi4uKTtcbiAgfSBAZWxzZSB7XG4gICAgQHJldHVybiByZW0tY29udmVydChyZW0sICR2YWx1ZXMuLi4pO1xuICB9XG59XG5cbkBtaXhpbiByZW0oJHByb3BlcnRpZXMsICR2YWx1ZXMuLi4pIHtcbiAgQGlmIHR5cGUtb2YoJHByb3BlcnRpZXMpID09IFwibWFwXCIge1xuICAgIEBlYWNoICRwcm9wZXJ0eSBpbiBtYXAta2V5cygkcHJvcGVydGllcykge1xuICAgICAgQGluY2x1ZGUgcmVtKCRwcm9wZXJ0eSwgbWFwLWdldCgkcHJvcGVydGllcywgJHByb3BlcnR5KSk7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAZWFjaCAkcHJvcGVydHkgaW4gJHByb3BlcnRpZXMge1xuICAgICAgQGlmICRyZW0tZmFsbGJhY2sgb3IgJHJlbS1weC1vbmx5IHtcbiAgICAgICAgI3skcHJvcGVydHl9OiByZW0tY29udmVydChweCwgJHZhbHVlcy4uLik7XG4gICAgICB9XG4gICAgICBAaWYgbm90ICRyZW0tcHgtb25seSB7XG4gICAgICAgICN7JHByb3BlcnR5fTogcmVtLWNvbnZlcnQocmVtLCAkdmFsdWVzLi4uKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0iLCIvKipcbiogU2FzcyBmdW5jdGlvbiBhbmQgbWl4aW4gdG8gdXNlIHJlbSB1bml0cyB3aXRoIG9wdGlvbmFsIHBpeGVsIGZhbGxiYWNrLlxuKiBBdXRob3I6IFBpZXJyZSBCdXJlbFxuKiBTb3VyY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9waWVycmVidXJlbC9zYXNzLXJlbVxuKi9cbi8qKlxuICogQ29sb3VyIHZhcmlhYmxlcy5cbiovXG4vKiBGb3IgcmVmICovXG4uaGFzLXdoaXRlLXRvLXByaW1hcnktZ3JhZGllbnQtYmFja2dyb3VuZCB7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxNDVkZWcsIHdoaXRlIDE1JSwgbGltZSAxMDAlKTsgfVxuICAuaGFzLXdoaXRlLXRvLXByaW1hcnktZ3JhZGllbnQtYmFja2dyb3VuZCBhOm5vdCguYnV0dG9uKTpub3QoLndwLWJsb2NrLWZpbGVfX2J1dHRvbik6bm90KC53cC1ibG9jay1idXR0b25fX2xpbmspLFxuICAuaGFzLXdoaXRlLXRvLXByaW1hcnktZ3JhZGllbnQtYmFja2dyb3VuZCArIGRpdiBhOm5vdCguYnV0dG9uKTpub3QoLndwLWJsb2NrLWZpbGVfX2J1dHRvbik6bm90KC53cC1ibG9jay1idXR0b25fX2xpbmspIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIGJsYWNrIDMwJSwgd2hpdGUgMTAwJSkgIWltcG9ydGFudDsgfVxuICAgIC5oYXMtd2hpdGUtdG8tcHJpbWFyeS1ncmFkaWVudC1iYWNrZ3JvdW5kIGE6bm90KC5idXR0b24pOm5vdCgud3AtYmxvY2stZmlsZV9fYnV0dG9uKTpub3QoLndwLWJsb2NrLWJ1dHRvbl9fbGluayk6aG92ZXIsXG4gICAgLmhhcy13aGl0ZS10by1wcmltYXJ5LWdyYWRpZW50LWJhY2tncm91bmQgKyBkaXYgYTpub3QoLmJ1dHRvbik6bm90KC53cC1ibG9jay1maWxlX19idXR0b24pOm5vdCgud3AtYmxvY2stYnV0dG9uX19saW5rKTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1udi10ZXh0LWNvbG9yKSAhaW1wb3J0YW50OyB9XG5cbi5oYXMtcHJpbWFyeS10by13aGl0ZS1ncmFkaWVudC1iYWNrZ3JvdW5kIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE0NWRlZywgbGltZSAxNSUsIHdoaXRlIDEwMCUpOyB9XG4gIC5oYXMtcHJpbWFyeS10by13aGl0ZS1ncmFkaWVudC1iYWNrZ3JvdW5kIGE6bm90KC5idXR0b24pOm5vdCgud3AtYmxvY2stZmlsZV9fYnV0dG9uKTpub3QoLndwLWJsb2NrLWJ1dHRvbl9fbGluayksXG4gIC5oYXMtcHJpbWFyeS10by13aGl0ZS1ncmFkaWVudC1iYWNrZ3JvdW5kICsgZGl2IGE6bm90KC5idXR0b24pOm5vdCgud3AtYmxvY2stZmlsZV9fYnV0dG9uKTpub3QoLndwLWJsb2NrLWJ1dHRvbl9fbGluaykge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgYmxhY2sgMzAlLCB3aGl0ZSAxMDAlKSAhaW1wb3J0YW50OyB9XG4gICAgLmhhcy1wcmltYXJ5LXRvLXdoaXRlLWdyYWRpZW50LWJhY2tncm91bmQgYTpub3QoLmJ1dHRvbik6bm90KC53cC1ibG9jay1maWxlX19idXR0b24pOm5vdCgud3AtYmxvY2stYnV0dG9uX19saW5rKTpob3ZlcixcbiAgICAuaGFzLXByaW1hcnktdG8td2hpdGUtZ3JhZGllbnQtYmFja2dyb3VuZCArIGRpdiBhOm5vdCguYnV0dG9uKTpub3QoLndwLWJsb2NrLWZpbGVfX2J1dHRvbik6bm90KC53cC1ibG9jay1idXR0b25fX2xpbmspOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6IHZhcigtLW52LXRleHQtY29sb3IpICFpbXBvcnRhbnQ7IH1cblxuLmhhcy13aGl0ZS10by1ibHVlLWdyYWRpZW50LWJhY2tncm91bmQge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTQ1ZGVnLCB3aGl0ZSAxNSUsICMwMDY2ZmYgMTAwJSk7IH1cbiAgLmhhcy13aGl0ZS10by1ibHVlLWdyYWRpZW50LWJhY2tncm91bmQgYTpub3QoLmJ1dHRvbik6bm90KC53cC1ibG9jay1maWxlX19idXR0b24pOm5vdCgud3AtYmxvY2stYnV0dG9uX19saW5rKSxcbiAgLmhhcy13aGl0ZS10by1ibHVlLWdyYWRpZW50LWJhY2tncm91bmQgKyBkaXYgYTpub3QoLmJ1dHRvbik6bm90KC53cC1ibG9jay1maWxlX19idXR0b24pOm5vdCgud3AtYmxvY2stYnV0dG9uX19saW5rKSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDkwZGVnLCBibGFjayAzMCUsIHdoaXRlIDEwMCUpICFpbXBvcnRhbnQ7IH1cbiAgICAuaGFzLXdoaXRlLXRvLWJsdWUtZ3JhZGllbnQtYmFja2dyb3VuZCBhOm5vdCguYnV0dG9uKTpub3QoLndwLWJsb2NrLWZpbGVfX2J1dHRvbik6bm90KC53cC1ibG9jay1idXR0b25fX2xpbmspOmhvdmVyLFxuICAgIC5oYXMtd2hpdGUtdG8tYmx1ZS1ncmFkaWVudC1iYWNrZ3JvdW5kICsgZGl2IGE6bm90KC5idXR0b24pOm5vdCgud3AtYmxvY2stZmlsZV9fYnV0dG9uKTpub3QoLndwLWJsb2NrLWJ1dHRvbl9fbGluayk6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogdmFyKC0tbnYtdGV4dC1jb2xvcikgIWltcG9ydGFudDsgfVxuXG4uaGFzLXdoaXRlLXRvLW9yYW5nZS1ncmFkaWVudC1iYWNrZ3JvdW5kIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE0NWRlZywgd2hpdGUgMTUlLCAjZmFhYTAwIDEwMCUpOyB9XG4gIC5oYXMtd2hpdGUtdG8tb3JhbmdlLWdyYWRpZW50LWJhY2tncm91bmQgYTpub3QoLmJ1dHRvbik6bm90KC53cC1ibG9jay1maWxlX19idXR0b24pOm5vdCgud3AtYmxvY2stYnV0dG9uX19saW5rKSxcbiAgLmhhcy13aGl0ZS10by1vcmFuZ2UtZ3JhZGllbnQtYmFja2dyb3VuZCArIGRpdiBhOm5vdCguYnV0dG9uKTpub3QoLndwLWJsb2NrLWZpbGVfX2J1dHRvbik6bm90KC53cC1ibG9jay1idXR0b25fX2xpbmspIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIGJsYWNrIDMwJSwgd2hpdGUgMTAwJSkgIWltcG9ydGFudDsgfVxuICAgIC5oYXMtd2hpdGUtdG8tb3JhbmdlLWdyYWRpZW50LWJhY2tncm91bmQgYTpub3QoLmJ1dHRvbik6bm90KC53cC1ibG9jay1maWxlX19idXR0b24pOm5vdCgud3AtYmxvY2stYnV0dG9uX19saW5rKTpob3ZlcixcbiAgICAuaGFzLXdoaXRlLXRvLW9yYW5nZS1ncmFkaWVudC1iYWNrZ3JvdW5kICsgZGl2IGE6bm90KC5idXR0b24pOm5vdCgud3AtYmxvY2stZmlsZV9fYnV0dG9uKTpub3QoLndwLWJsb2NrLWJ1dHRvbl9fbGluayk6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogdmFyKC0tbnYtdGV4dC1jb2xvcikgIWltcG9ydGFudDsgfVxuXG4vKipcbiAqIFZhcmlhYmxlcyBmb3IgdXNlIHRocm91Z2hvdXQgdGhlIHJlc3Qgb2YgdGhlIFNBU1MgcGFydGlhbHMuXG4qL1xuLyogRm9udCBkZWZpbml0aW9ucyAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAndHdrZXZlcmV0dCc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvdHdrZXZlcmV0dC90d2tldmVyZXR0LXJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL3R3a2V2ZXJldHQvdHdrZXZlcmV0dC1yZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ3R3a2V2ZXJldHQnO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL3R3a2V2ZXJldHQvdHdrZXZlcmV0dC1yZWd1bGFyaXRhbGljLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy90d2tldmVyZXR0L3R3a2V2ZXJldHQtcmVndWxhcml0YWxpYy53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAqIERlZmF1bHQgdHlwb2dyYXBoeSBzdHlsZXMgYW5kIHZhcmlhYmxlcy5cbiAqIE92ZXJyaWRlcyBvZiBrZXkgVHdlbnR5VHdlbnR5IHR5cG9ncmFwaHkgc3R5bGVzLlxuKi9cbi8qIERlZmF1bHQgdHlwb2dyYXBoeSBzdHlsZXMgYW5kIHZhcmlhYmxlcyAqL1xuLyoqXG4gKiBTdHlsaW5nIG92ZXJyaWRlcyBmb3IgYmFzaWMgSFRNTCBlbGVtZW50cy5cbiovXG5ib2R5IHtcbiAgd29yZC13cmFwOiBicmVhay13b3JkOyB9XG5cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICBmb250LWZhbWlseTogXCJ0d2tldmVyZXR0XCIsIHNhbnMtc2VyaWY7IH1cbiAgaDEgPiBhLCBoMiA+IGEsIGgzID4gYSwgaDQgPiBhLCBoNSA+IGEsIGg2ID4gYSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gICAgaDEgPiBhOmhvdmVyLCBoMiA+IGE6aG92ZXIsIGgzID4gYTpob3ZlciwgaDQgPiBhOmhvdmVyLCBoNSA+IGE6aG92ZXIsIGg2ID4gYTpob3ZlciB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG5oMiB7XG4gIG1hcmdpbi10b3A6IDJyZW07IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcwMHB4KSB7XG4gICAgaDIge1xuICAgICAgbWFyZ2luLXRvcDogM3JlbTsgfSB9XG5cbmgzIHtcbiAgbWFyZ2luLXRvcDogMnJlbTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzAwcHgpIHtcbiAgICBoMyB7XG4gICAgICBtYXJnaW4tdG9wOiAzcmVtOyB9IH1cblxuaDQge1xuICBtYXJnaW4tdG9wOiAxLjNyZW07IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcwMHB4KSB7XG4gICAgaDQge1xuICAgICAgbWFyZ2luLXRvcDogMS41cmVtOyB9IH1cblxucCB7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07IH1cblxuLyogVXNlZnVsIGNsYXNzZXMgdGhhdCBjYW4gYmUgcmV1c2VkIGluIGFsbCBzb3J0cyBvZiBncmVhdCBwbGFjZXMgKi9cbi5yZWFkaW5nLXdpZHRoIHtcbiAgbWF4LXdpZHRoOiA4MDBweDtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bzsgfVxuXG4uaGlkZS1pbWFnZS1vbi1tb2JpbGUgaW1nIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzAwcHgpIHtcbiAgICAuaGlkZS1pbWFnZS1vbi1tb2JpbGUgaW1nIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cblxuLyogUGFkZGluZyAgICAqL1xuLnB0LTAge1xuICBwYWRkaW5nLXRvcDogMDsgfVxuXG4ucGItMCwgLm5vLXBhZGRpbmctYm90dG9tIHtcbiAgcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDsgfVxuXG4ucGItNCB7XG4gIHBhZGRpbmctYm90dG9tOiAxcmVtOyB9XG5cbi5weC0wIHtcbiAgcGFkZGluZy1sZWZ0OiAwICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDAgIWltcG9ydGFudDsgfVxuXG4vKiBNYXJnaW4gICAgICAqL1xuLm10LTAsIC5uby1tYXJnaW4tdG9wIHtcbiAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50OyB9XG5cbi5tYi0wLCAubm8tbWFyZ2luLWJvdHRvbSB7XG4gIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDsgfVxuXG4vKiBCb3JkZXIgICAgICAqL1xuLm5vLWJvcmRlci10b3Age1xuICBib3JkZXItdG9wOiBub25lICFpbXBvcnRhbnQ7IH1cblxuLm5vLWJvcmRlci1ib3R0b20ge1xuICBib3JkZXItYm90dG9tOiBub25lICFpbXBvcnRhbnQ7IH1cblxuLmJvcmRlci10b3Age1xuICBib3JkZXItdG9wOiAycHggc29saWQgdmFyKC0tbnYtdGV4dC1jb2xvcik7IH1cblxuLmJvcmRlci1ib3R0b20sIC53cC1ibG9jay1jb2x1bW5zIC53cC1ibG9jay1jb2x1bW4gPiBoMiwgLndwLWJsb2NrLWNvbHVtbnMgLndwLWJsb2NrLWNvbHVtbiA+IGgzIHtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHZhcigtLW52LXRleHQtY29sb3IpOyB9XG5cbi5ib3JkZXItcmlnaHQge1xuICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCB2YXIoLS1udi10ZXh0LWNvbG9yKTsgfVxuXG4uYm9yZGVyLWxlZnQge1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkIHZhcigtLW52LXRleHQtY29sb3IpOyB9XG5cbi8qKlxuICogQmFzZSBsYXlvdXQgc3R5bGVzLlxuICogVGhlc2UgYXJlIGxhcmdlbHkgZ29pbmcgdG8gYmUgYWZmZWN0ZWQgdGhlIG91dGVyIG1vc3QgY29udGFpbmVycyBvZiBlYWNoIHBhZ2UuXG4qL1xuLmVudHJ5LWNvbnRlbnQgPiBkaXZbY2xhc3MqPVwid3AtYmxvY2stXCJdIHtcbiAgbWFyZ2luLXRvcDogMnJlbTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzAwcHgpIHtcbiAgICAuZW50cnktY29udGVudCA+IGRpdltjbGFzcyo9XCJ3cC1ibG9jay1cIl0ge1xuICAgICAgbWFyZ2luLXRvcDogM3JlbTsgfSB9XG4gIC5lbnRyeS1jb250ZW50ID4gZGl2W2NsYXNzKj1cIndwLWJsb2NrLVwiXTpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXRvcDogMDsgfVxuICAuZW50cnktY29udGVudCA+IGRpdltjbGFzcyo9XCJ3cC1ibG9jay1cIl06bGFzdC1jaGlsZCB7XG4gICAgYm9yZGVyOiAwOyB9XG4gIC5lbnRyeS1jb250ZW50ID4gZGl2W2NsYXNzKj1cIndwLWJsb2NrLVwiXSA+IGRpdltjbGFzcyo9XCJfX2lubmVyLWNvbnRhaW5lclwiXSB7XG4gICAgcGFkZGluZy10b3A6IDJyZW07XG4gICAgcGFkZGluZy1ib3R0b206IDJyZW07IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzAwcHgpIHtcbiAgICAgIC5lbnRyeS1jb250ZW50ID4gZGl2W2NsYXNzKj1cIndwLWJsb2NrLVwiXSA+IGRpdltjbGFzcyo9XCJfX2lubmVyLWNvbnRhaW5lclwiXSB7XG4gICAgICAgIHBhZGRpbmctdG9wOiAzcmVtO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogM3JlbTsgfSB9XG4gICAgLmVudHJ5LWNvbnRlbnQgPiBkaXZbY2xhc3MqPVwid3AtYmxvY2stXCJdID4gZGl2W2NsYXNzKj1cIl9faW5uZXItY29udGFpbmVyXCJdID4gaDI6Zmlyc3Qtb2YtdHlwZSxcbiAgICAuZW50cnktY29udGVudCA+IGRpdltjbGFzcyo9XCJ3cC1ibG9jay1cIl0gPiBkaXZbY2xhc3MqPVwiX19pbm5lci1jb250YWluZXJcIl0gPiBoMzpmaXJzdC1vZi10eXBlLFxuICAgIC5lbnRyeS1jb250ZW50ID4gZGl2W2NsYXNzKj1cIndwLWJsb2NrLVwiXSA+IGRpdltjbGFzcyo9XCJfX2lubmVyLWNvbnRhaW5lclwiXSA+IGg0OmZpcnN0LW9mLXR5cGUge1xuICAgICAgbWFyZ2luLXRvcDogMDsgfVxuXG4uZW50cnktY29udGVudCA+IGRpdltjbGFzcyo9XCJoYXMtYmFja2dyb3VuZFwiXSArIGRpdltjbGFzcyo9XCJoYXMtYmFja2dyb3VuZFwiXSxcbi5lbnRyeS1jb250ZW50ID4gZGl2LndwLWJsb2NrLWNvdmVyICsgZGl2W2NsYXNzKj1cImhhcy1iYWNrZ3JvdW5kXCJdIHtcbiAgbWFyZ2luLXRvcDogMDsgfVxuXG4uZW50cnktY29udGVudCBwICsgLndwLWJsb2NrLWJ1dHRvbnMsIC5lbnRyeS1jb250ZW50IG9sICsgLndwLWJsb2NrLWJ1dHRvbnMsIC5lbnRyeS1jb250ZW50IHVsICsgLndwLWJsb2NrLWJ1dHRvbnMge1xuICBtYXJnaW4tdG9wOiAxLjVyZW07IH1cblxuLmVudHJ5LWNvbnRlbnQgPiAud3AtYmxvY2stY292ZXIgKyBwLCAuZW50cnktY29udGVudCA+IC53cC1ibG9jay1jb3ZlciArIG9sLCAuZW50cnktY29udGVudCA+IC53cC1ibG9jay1jb3ZlciArIHVsLFxuLmVudHJ5LWNvbnRlbnQgPiAud3AtYmxvY2stY292ZXIgKyBmaWd1cmUsXG4uZW50cnktY29udGVudCA+IC53cC1ibG9jay1ncm91cCArIHAsXG4uZW50cnktY29udGVudCA+IC53cC1ibG9jay1ncm91cCArIG9sLFxuLmVudHJ5LWNvbnRlbnQgPiAud3AtYmxvY2stZ3JvdXAgKyB1bCxcbi5lbnRyeS1jb250ZW50ID4gLndwLWJsb2NrLWdyb3VwICsgZmlndXJlIHtcbiAgbWFyZ2luLXRvcDogMnJlbTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzAwcHgpIHtcbiAgICAuZW50cnktY29udGVudCA+IC53cC1ibG9jay1jb3ZlciArIHAsIC5lbnRyeS1jb250ZW50ID4gLndwLWJsb2NrLWNvdmVyICsgb2wsIC5lbnRyeS1jb250ZW50ID4gLndwLWJsb2NrLWNvdmVyICsgdWwsXG4gICAgLmVudHJ5LWNvbnRlbnQgPiAud3AtYmxvY2stY292ZXIgKyBmaWd1cmUsXG4gICAgLmVudHJ5LWNvbnRlbnQgPiAud3AtYmxvY2stZ3JvdXAgKyBwLFxuICAgIC5lbnRyeS1jb250ZW50ID4gLndwLWJsb2NrLWdyb3VwICsgb2wsXG4gICAgLmVudHJ5LWNvbnRlbnQgPiAud3AtYmxvY2stZ3JvdXAgKyB1bCxcbiAgICAuZW50cnktY29udGVudCA+IC53cC1ibG9jay1ncm91cCArIGZpZ3VyZSB7XG4gICAgICBtYXJnaW4tdG9wOiAzcmVtOyB9IH1cblxuLndwLWJsb2NrLWJ1dHRvbnMgKyBoMyB7XG4gIG1hcmdpbi10b3A6IDJyZW07IH1cblxuaDIgKyBoMyB7XG4gIG1hcmdpbi10b3A6IDFyZW07IH1cblxucCArIGgyLFxuLndwLWJsb2NrLWJ1dHRvbnMgKyBoMiB7XG4gIG1hcmdpbi10b3A6IDJyZW07IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcwMHB4KSB7XG4gICAgcCArIGgyLFxuICAgIC53cC1ibG9jay1idXR0b25zICsgaDIge1xuICAgICAgbWFyZ2luLXRvcDogNHJlbTsgfSB9XG5cbi8qIEJhc2ljIGxheW91dCBmdW5jdGlvbnMsIHdpZHRocyBldGMgKi9cbi5hbGlnbndpZGUge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3MDBweCkge1xuICAgIC5hbGlnbndpZGUge1xuICAgICAgd2lkdGg6IDEwMHZ3O1xuICAgICAgbWF4LXdpZHRoOiAxMDB2dztcbiAgICAgIG1hcmdpbi1sZWZ0OiBjYWxjKCA1MCUgLSA1MHZ3KTtcbiAgICAgIG1hcmdpbi1yaWdodDogY2FsYyggNTAlIC0gNTB2dyk7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDExNzBweCkge1xuICAgIC5hbGlnbndpZGUge1xuICAgICAgd2lkdGg6IDExNzBweDtcbiAgICAgIG1heC13aWR0aDogbm9uZTtcbiAgICAgIG1hcmdpbi1sZWZ0OiBjYWxjKCA1MCUgLSAoIDExNzBweCAvIDIgKSk7IH0gfVxuXG4vKiBPdmVycmlkZSBOZXZlIGlubGluZSBzdHlsZXMgKi9cbiNjb250ZW50Lm5ldmUtbWFpbiAuY29udGFpbmVyIC5hbGlnbmZ1bGwgPiBbY2xhc3MqPVwiX19pbm5lci1jb250YWluZXJcIl0sXG4jY29udGVudC5uZXZlLW1haW4gLmNvbnRhaW5lciAuYWxpZ253aWRlID4gW2NsYXNzKj1cIl9faW5uZXItY29udGFpbmVyXCJdIHtcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICBwYWRkaW5nLXJpZ2h0OiAxNXB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5NjBweCkge1xuICAgICNjb250ZW50Lm5ldmUtbWFpbiAuY29udGFpbmVyIC5hbGlnbmZ1bGwgPiBbY2xhc3MqPVwiX19pbm5lci1jb250YWluZXJcIl0sXG4gICAgI2NvbnRlbnQubmV2ZS1tYWluIC5jb250YWluZXIgLmFsaWdud2lkZSA+IFtjbGFzcyo9XCJfX2lubmVyLWNvbnRhaW5lclwiXSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDExNzBweCkge1xuICAgICNjb250ZW50Lm5ldmUtbWFpbiAuY29udGFpbmVyIC5hbGlnbmZ1bGwgPiBbY2xhc3MqPVwiX19pbm5lci1jb250YWluZXJcIl0sXG4gICAgI2NvbnRlbnQubmV2ZS1tYWluIC5jb250YWluZXIgLmFsaWdud2lkZSA+IFtjbGFzcyo9XCJfX2lubmVyLWNvbnRhaW5lclwiXSB7XG4gICAgICBtYXgtd2lkdGg6IDExNzBweDsgfSB9XG5cbi8qKiBDb21tb24gc3R5bGVzIGluIHRoZSBOZXZlIHRoZW1lIHRoYXQgd2UnZCBsaWtlIHRvIG92ZXJ3cml0ZS4gKi9cbi5udi1pbmRleC1wb3N0cyxcbi5udi1zaW5nbGUtcGFnZS13cmFwLFxuLm52LXNpbmdsZS1wb3N0LXdyYXAge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbi5udi1pbmRleC1wb3N0cyAubnYtcGFnZS10aXRsZS13cmFwLFxuLm52LXBhZ2UtdGl0bGUtd3JhcCB7XG4gIG1hcmdpbi10b3A6IDJyZW07IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcwMHB4KSB7XG4gICAgLm52LWluZGV4LXBvc3RzIC5udi1wYWdlLXRpdGxlLXdyYXAsXG4gICAgLm52LXBhZ2UtdGl0bGUtd3JhcCB7XG4gICAgICBtYXJnaW4tdG9wOiA0cmVtOyB9IH1cbiAgLm52LWluZGV4LXBvc3RzIC5udi1wYWdlLXRpdGxlLXdyYXAubnYtYmlnLXRpdGxlIC5udi1wYWdlLXRpdGxlLFxuICAubnYtcGFnZS10aXRsZS13cmFwLm52LWJpZy10aXRsZSAubnYtcGFnZS10aXRsZSB7XG4gICAgYm9yZGVyLXdpZHRoOiAwOyB9XG5cbi5udi1jb250ZW50LXdyYXAge1xuICBtYXJnaW4tdG9wOiAycmVtOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAgIC5udi1jb250ZW50LXdyYXAge1xuICAgICAgbWFyZ2luLXRvcDogNHJlbTsgfSB9XG4gIC5udi1jb250ZW50LXdyYXAgPiAqOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1ib3R0b206IDJyZW07IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgICAgIC5udi1jb250ZW50LXdyYXAgPiAqOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAzcmVtOyB9IH1cblxuLm52LXBhZ2UtdGl0bGUtd3JhcCArIC5udi1jb250ZW50LXdyYXAge1xuICBtYXJnaW4tdG9wOiAwOyB9XG5cbi5udi1jb21tZW50LWNvbnRlbnQgYSxcbi5udi1jb250ZW50LXdyYXAgYTpub3QoLmJ1dHRvbik6bm90KC53cC1ibG9jay1maWxlX19idXR0b24pOm5vdCgud3AtYmxvY2stYnV0dG9uX19saW5rKSxcbi53cC1ibG9jay1wb3N0LWNvbnRlbnQgYTpub3QoLmJ1dHRvbik6bm90KC53cC1ibG9jay1maWxlX19idXR0b24pOm5vdCgud3AtYmxvY2stYnV0dG9uX19saW5rKSxcbi5mZWxsb3dzaGlwLXBvc3RfX2NvbnRlbnQtd2lkZ2V0LWNvbnRhaW5lciBhLFxuLm52LXBvc3QtbmF2aWdhdGlvbiBhIHtcbiAgY29sb3I6IHZhcigtLW52LXRleHQtY29sb3IpO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgyNzBkZWcsIGxpbWUgMzAlLCAjMTQ1MzE0IDEwMCUpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7XG4gIGJhY2tncm91bmQtc2l6ZTogMTAwJSAycHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgOTUlOyB9XG4gIC5udi1jb21tZW50LWNvbnRlbnQgYTpob3ZlcixcbiAgLm52LWNvbnRlbnQtd3JhcCBhOm5vdCguYnV0dG9uKTpub3QoLndwLWJsb2NrLWZpbGVfX2J1dHRvbik6bm90KC53cC1ibG9jay1idXR0b25fX2xpbmspOmhvdmVyLFxuICAud3AtYmxvY2stcG9zdC1jb250ZW50IGE6bm90KC5idXR0b24pOm5vdCgud3AtYmxvY2stZmlsZV9fYnV0dG9uKTpub3QoLndwLWJsb2NrLWJ1dHRvbl9fbGluayk6aG92ZXIsXG4gIC5mZWxsb3dzaGlwLXBvc3RfX2NvbnRlbnQtd2lkZ2V0LWNvbnRhaW5lciBhOmhvdmVyLFxuICAubnYtcG9zdC1uYXZpZ2F0aW9uIGE6aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1udi10ZXh0LWNvbG9yKTsgfVxuXG4vKipcbiAqIEN1c3RvbSBjbGFzZXNzIHRoYXQgY2FuIGJlIGFwcGxpZWQgdG8gR3V0ZW5iZXJnIGJsb2Nrcy5cbiovXG4vKiAxLiBHRU5FUkFMIENMQVNTRVMgICAgICovXG4vKiAyLiBDT0xPVVIgQ0xBU1NFUyAgICAgICovXG4vKiAxLiBHRU5FUkFMIENMQVNTRVMgICAgICovXG4uYWxpZ25mdWxsIHtcbiAgcGFkZGluZy1yaWdodDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwOyB9XG5cbi5hbGlnbmZ1bGwgPiBbY2xhc3MqPVwiX19pbm5lci1jb250YWluZXJcIl0sXG4uYWxpZ253aWRlID4gW2NsYXNzKj1cIl9faW5uZXItY29udGFpbmVyXCJdIHtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bzsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTYwcHgpIHtcbiAgLmFsaWduZnVsbCA+IFtjbGFzcyo9XCJfX2lubmVyLWNvbnRhaW5lclwiXSB7XG4gICAgbWF4LXdpZHRoOiA3MCU7IH0gfVxuXG4vKiAyLiBDT0xPVVIgQ0xBU1NFUyAgICAgICovXG4vKipcbiAqIEN1c3RvbWlzYXRpb25zIGZvciB0aGUgZ3JvdXAgYmxvY2suXG4qL1xuLyogMS4gR0VORVJBTCBCTE9DSyBDVVNUT01JU0FUSU9OUyAqL1xuLyogMi4gQ1VTVE9NIENMQVNTRVMgICAgICAgICAgICAgICAqL1xuLyogMS4gR0VORVJBTCBCTE9DSyBDVVNUT01JU0FUSU9OUyAqL1xuLmVudHJ5LWNvbnRlbnQgPiAud3AtYmxvY2stZ3JvdXA6bm90KC5uby1ib3JkZXIpIHtcbiAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIHZhcigtLW52LXRleHQtY29sb3IpO1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgdmFyKC0tbnYtdGV4dC1jb2xvcik7IH1cblxuLndwLWJsb2NrLWdyb3VwLmdyYWRpZW50LW91dGxpbmUge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjZWVlZWVlIDAlLCAjYzBjOWJmIDEwMCUpO1xuICBwYWRkaW5nOiAwLjI1cmVtOyB9XG4gIC53cC1ibG9jay1ncm91cC5ncmFkaWVudC1vdXRsaW5lOm50aC1vZi10eXBlKGV2ZW4pIHtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjYzBjOWJmIDAlLCAjZWVlZWVlIDEwMCUpOyB9XG4gIC53cC1ibG9jay1ncm91cC5ncmFkaWVudC1vdXRsaW5lIC53cC1ibG9jay1ncm91cF9faW5uZXItY29udGFpbmVyIHtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiAxcmVtOyB9XG4gICAgLndwLWJsb2NrLWdyb3VwLmdyYWRpZW50LW91dGxpbmUgLndwLWJsb2NrLWdyb3VwX19pbm5lci1jb250YWluZXIgPiBoMjpmaXJzdC1vZi10eXBlLCAud3AtYmxvY2stZ3JvdXAuZ3JhZGllbnQtb3V0bGluZSAud3AtYmxvY2stZ3JvdXBfX2lubmVyLWNvbnRhaW5lciA+IGgzOmZpcnN0LW9mLXR5cGUsIC53cC1ibG9jay1ncm91cC5ncmFkaWVudC1vdXRsaW5lIC53cC1ibG9jay1ncm91cF9faW5uZXItY29udGFpbmVyID4gaDQ6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICBtYXJnaW4tdG9wOiAwOyB9XG5cbi8qKlxuICogVHdlYWtzIGFuZCBjaGFuZ2VzIGZvciB0aGUgZGVmYXVsdCBHdXRlbmJlcmcgY292ZXIgYmxvY2suXG4gKiBJbiB0aGlzIHNpdGUsIHdlIGV4cGVjdCB0aGUgYmxvY2sgdG8gYmUgaW5zaWRlIHRoZSBncm91cCBibG9jay5cbiovXG4ud3AtYmxvY2stY292ZXIge1xuICBib3JkZXItYm90dG9tOiBzb2xpZCAycHggYmxhY2s7IH1cbiAgLndwLWJsb2NrLWNvdmVyLmhpZGUtaW1hZ2Utb24tbW9iaWxlIGltZyB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3MDBweCkge1xuICAgICAgLndwLWJsb2NrLWNvdmVyLmhpZGUtaW1hZ2Utb24tbW9iaWxlIGltZyB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDY5OS45OHB4KSB7XG4gICAgLndwLWJsb2NrLWNvdmVyLmhpZGUtYmctb24tbW9iaWxlIC53cC1ibG9jay1jb3Zlcl9fYmFja2dyb3VuZCB7XG4gICAgICBiYWNrZ3JvdW5kOiBub25lICFpbXBvcnRhbnQ7IH0gfVxuXG4vKipcbiAqIEN1c3RvbXNhdGlvbnMgdG8gdGhlIGNvbHVtbnMgbGF5b3V0XG4qL1xuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzgycHgpIHtcbiAgLndwLWJsb2NrLWNvbHVtbnM6bm90KC5uby1ib3JkZXIpIC53cC1ibG9jay1jb2x1bW4ge1xuICAgIGJvcmRlci1yaWdodDogMnB4IHNvbGlkIHZhcigtLW52LXRleHQtY29sb3IpO1xuICAgIHBhZGRpbmctcmlnaHQ6IDJyZW07IH0gfVxuXG4ud3AtYmxvY2stY29sdW1uczpub3QoLm5vLWJvcmRlcikgLndwLWJsb2NrLWNvbHVtbjpsYXN0LW9mLXR5cGUge1xuICBib3JkZXI6IG5vbmU7IH1cblxuLndwLWJsb2NrLWNvbHVtbnMgLndwLWJsb2NrLWNvbHVtbiB7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07IH1cbiAgLndwLWJsb2NrLWNvbHVtbnMgLndwLWJsb2NrLWNvbHVtbiA+ICo6Zmlyc3QtY2hpbGQge1xuICAgIG1hcmdpbi10b3A6IDA7IH1cbiAgLndwLWJsb2NrLWNvbHVtbnMgLndwLWJsb2NrLWNvbHVtbiA+IGgyLCAud3AtYmxvY2stY29sdW1ucyAud3AtYmxvY2stY29sdW1uID4gaDMge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLndwLWJsb2NrLWNvbHVtbnMgLndwLWJsb2NrLWNvbHVtbiBwIHtcbiAgICBwYWRkaW5nOiAxcmVtIDAgMCAwO1xuICAgIG1hcmdpbjogMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzAwcHgpIHtcbiAgICAud3AtYmxvY2stY29sdW1ucyAud3AtYmxvY2stY29sdW1uIC5oaWRlLWltYWdlLW9uLW1vYmlsZSBpbWcge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc4MnB4KSB7XG4gICAgLndwLWJsb2NrLWNvbHVtbnMgLndwLWJsb2NrLWNvbHVtbiAuaGlkZS1pbWFnZS1vbi1tb2JpbGUgaW1nIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cblxuLyoqXG4gKiBDdXN0b21pc2F0aW9ucyBmb3IgZ3V0ZW5iZXJnIGJ1dHRvbiBibG9ja3MuXG4qL1xuLndwLWJsb2NrLWJ1dHRvbnMge1xuICBtYXJnaW4tdG9wOiAxcmVtO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtOyB9XG5cbi53cC1ibG9jay1idXR0b25fX2xpbmsge1xuICBtaW4taGVpZ2h0OiAzcmVtO1xuICBib3JkZXI6IDJweCBzb2xpZCBibGFjayAhaW1wb3J0YW50OyB9XG4gIC53cC1ibG9jay1idXR0b25fX2xpbms6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW52LXNpdGUtYmcpO1xuICAgIGNvbG9yOiB2YXIoLS1udi10ZXh0LWNvbG9yKTsgfVxuXG4vKiBTdHlsaW5nIGZvciB0aGUgYmxvY2txdW90ZSAocXVvdGVzKSBibG9jayAqL1xuLyogMS4gQkxPQ0tRVU9URSAgICAgKi9cbi8qIDIuIFBVTExRVU9URSAgICAgICovXG4vKiAxLiBCTE9DS1FVT1RFICAgICAqL1xuYmxvY2txdW90ZTo6YWZ0ZXIsXG5ibG9ja3F1b3RlOjpiZWZvcmUge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbmJsb2NrcXVvdGUud3AtYmxvY2stcXVvdGUge1xuICBib3JkZXItbGVmdDogNHB4IHNvbGlkICMwMEZGMDA7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHBhZGRpbmctYm90dG9tOiAxcmVtICFpbXBvcnRhbnQ7IH1cbiAgYmxvY2txdW90ZS53cC1ibG9jay1xdW90ZSA+ICoge1xuICAgIHBhZGRpbmc6IDFyZW07IH1cbiAgYmxvY2txdW90ZS53cC1ibG9jay1xdW90ZSBlbSB7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG4gIGJsb2NrcXVvdGUud3AtYmxvY2stcXVvdGUgY2l0ZSB7XG4gICAgZm9udC1mYW1pbHk6IFwidHdrZXZlcmV0dFwiLCBzYW5zLXNlcmlmO1xuICAgIGNvbG9yOiAjNEFERTRBO1xuICAgIHBhZGRpbmctdG9wOiAwO1xuICAgIHBhZGRpbmctYm90dG9tOiAwOyB9XG4gICAgYmxvY2txdW90ZS53cC1ibG9jay1xdW90ZSBjaXRlOjpiZWZvcmUge1xuICAgICAgY29udGVudDogJy0gJztcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHdpZHRoOiAxZW07XG4gICAgICBoZWlnaHQ6IDFyZW07XG4gICAgICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTsgfVxuICBibG9ja3F1b3RlLndwLWJsb2NrLXF1b3RlLmlzLXN0eWxlLWxhcmdlIHtcbiAgICBwYWRkaW5nOiAwOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDY5OS45OHB4KSB7XG4gICAgICBibG9ja3F1b3RlLndwLWJsb2NrLXF1b3RlLmlzLXN0eWxlLWxhcmdlIHAge1xuICAgICAgICBmb250LXNpemU6IDEuNHJlbTsgfSB9XG4gICAgYmxvY2txdW90ZS53cC1ibG9jay1xdW90ZS5pcy1zdHlsZS1sYXJnZSBjaXRlIHtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzAwcHgpIHtcbiAgICAgIGJsb2NrcXVvdGUud3AtYmxvY2stcXVvdGUuaXMtc3R5bGUtbGFyZ2Uge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDFyZW07IH0gfVxuICBibG9ja3F1b3RlLndwLWJsb2NrLXF1b3RlLmlzLXN0eWxlLWRlZmF1bHQgcCB7XG4gICAgZm9udC1zaXplOiAxLjNlbTsgfVxuXG4vKiAyLiBQVUxMUVVPVEUgICAgICAqL1xuLndwLWJsb2NrLXB1bGxxdW90ZSB7XG4gIGZvbnQtc2l6ZTogdmFyKC0td3AtLXByZXNldC0tZm9udC1zaXplLS1tZWRpdW0pO1xuICBib3JkZXItdG9wLWNvbG9yOiAjMDBGRjAwO1xuICBib3JkZXItYm90dG9tLWNvbG9yOiAjMDBGRjAwO1xuICBtYXJnaW4tdG9wOiAycmVtO1xuICBtYXJnaW4tYm90dG9tOiAycmVtOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3MDBweCkge1xuICAgIC53cC1ibG9jay1wdWxscXVvdGUge1xuICAgICAgbWFyZ2luLXRvcDogNHJlbTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDRyZW07IH0gfVxuXG4vKiAxLiBHRU5FUkFMICAgICAgICAgICAgICovXG4vKiAyLiBRVUVTVElPTiBTVFlMSU5HICAgICovXG4vKiAzLiBBTlNXRVIgU1RZTElORyAgICAgICovXG4uc2NoZW1hLWZhcS1zZWN0aW9uIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5zY2hlbWEtZmFxLXNlY3Rpb246aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAuc2NoZW1hLWZhcS1zZWN0aW9uOmJlZm9yZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY29udGVudDogJyc7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgbWFyZ2luOiAxcmVtIDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbnYtcHJpbWFyeS1hY2NlbnQpOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDcwMHB4KSB7XG4gICAgICAuc2NoZW1hLWZhcS1zZWN0aW9uOmJlZm9yZSB7XG4gICAgICAgIG1hcmdpbjogMnJlbSAwOyB9IH1cbiAgICAuYmxvY2stZWRpdG9yLWJsb2NrLWxpc3RfX2Jsb2NrIC5zY2hlbWEtZmFxLXNlY3Rpb246YmVmb3JlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgbWFyZ2luLXRvcDogMDsgfVxuICAuc2NoZW1hLWZhcS1zZWN0aW9uOmxhc3Qtb2YtdHlwZSB7XG4gICAgcGFkZGluZy1ib3R0b206IDFyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdmFyKC0tbnYtcHJpbWFyeS1hY2NlbnQpOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDcwMHB4KSB7XG4gICAgICAuc2NoZW1hLWZhcS1zZWN0aW9uOmxhc3Qtb2YtdHlwZSB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAycmVtO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAycmVtOyB9IH1cblxuLyogMi4gUVVFU1RJT04gU1RZTElORyAgICAqL1xuLnNjaGVtYS1mYXEtcXVlc3Rpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZy1yaWdodDogMi4ycmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjZyZW07XG4gIGZvbnQtZmFtaWx5OiBcInR3a2V2ZXJldHRcIiwgc2Fucy1zZXJpZjtcbiAgbGluZS1oZWlnaHQ6IDEuMzsgfVxuICAuc2NoZW1hLWZhcS1xdWVzdGlvbjpub3QoLmJsb2NrLWVkaXRvci1yaWNoLXRleHRfX2VkaXRhYmxlKTphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMS4zcmVtO1xuICAgIHJpZ2h0OiAwO1xuICAgIGhlaWdodDogMzBweDtcbiAgICB3aWR0aDogMzBweDtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBsaW5lYXI7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL2NhcmV0LWRvd24uc3ZnXCIpO1xuICAgIGJhY2tncm91bmQtc2l6ZTogMzBweCAzMHB4O1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3MDBweCkge1xuICAgICAgLnNjaGVtYS1mYXEtcXVlc3Rpb246bm90KC5ibG9jay1lZGl0b3ItcmljaC10ZXh0X19lZGl0YWJsZSk6YWZ0ZXIge1xuICAgICAgICB0b3A6IDIuM3JlbTsgfSB9XG4gIC5pcy1vcGVuIC5zY2hlbWEtZmFxLXF1ZXN0aW9uOm5vdCguYmxvY2stZWRpdG9yLXJpY2gtdGV4dF9fZWRpdGFibGUpOjphZnRlciB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTsgfVxuXG4vKiAzLiBBTlNXRVIgU1RZTElORyAgICAqL1xuLnNjaGVtYS1mYXEtYW5zd2VyOm5vdCguYmxvY2stZWRpdG9yLXJpY2gtdGV4dF9fZWRpdGFibGUpIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgbWFyZ2luOiAxcmVtIDA7IH1cbiAgLmlzLW9wZW4gLnNjaGVtYS1mYXEtYW5zd2VyOm5vdCguYmxvY2stZWRpdG9yLXJpY2gtdGV4dF9fZWRpdGFibGUpIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuXG4uc2NoZW1hLWZhcS1hbnN3ZXIuYmxvY2stZWRpdG9yLXJpY2gtdGV4dF9fZWRpdGFibGUge1xuICBtYXJnaW4tYm90dG9tOiAycmVtICFpbXBvcnRhbnQ7IH1cblxuLnNjaGVtYS1mYXEtc2VjdGlvbjpsYXN0LW9mLXR5cGUgLnNjaGVtYS1mYXEtYW5zd2VyOm5vdCguYmxvY2stZWRpdG9yLXJpY2gtdGV4dF9fZWRpdGFibGUpIHtcbiAgbWFyZ2luLWJvdHRvbTogMDsgfVxuXG4vKiBTdHlsZXMgZm9yIGRlZmF1bHQgZW1iZWQgYmxvY2ssIGVnIGZvciB2aWRlb3MgKi9cbi53cC1ibG9jay1lbWJlZCB7XG4gIG1hcmdpbjogMnJlbSAwOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3MDBweCkge1xuICAgIC53cC1ibG9jay1lbWJlZCB7XG4gICAgICBtYXJnaW46IDRyZW0gMDsgfSB9XG5cbi8qIFN0eWxpbmcgYW5kIGN1c3RvbWlzYXRpb25zIGZvciBpbWFnZXMuICovXG4ud3AtYmxvY2staW1hZ2UgZmlndXJlID4gYSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmUgIWltcG9ydGFudDsgfVxuICAud3AtYmxvY2staW1hZ2UgZmlndXJlID4gYTpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogbm9uZSAhaW1wb3J0YW50OyB9XG5cbi8qIFN0eWxpbmcgY3VzdG9taXNhdGlvbnMgZm9yIHRoZSBkZWZhdWx0IHNlcGFyYXRvciBibG9jay4gKi9cbmhyLndwLWJsb2NrLXNlcGFyYXRvciB7XG4gIG1hcmdpbi10b3A6IDJyZW07IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcwMHB4KSB7XG4gICAgaHIud3AtYmxvY2stc2VwYXJhdG9yIHtcbiAgICAgIG1hcmdpbi10b3A6IDNyZW07IH0gfVxuIiwiLyoqXG4gKiBDb2xvdXIgdmFyaWFibGVzLlxuKi9cblxuLyogRm9yIHJlZiAqL1xuLy8gLS1udi1wcmltYXJ5LWFjY2VudDogIzNjZmYwMDtcbi8vIC0tbnYtc2Vjb25kYXJ5LWFjY2VudDogIzAwNjZmZjtcbi8vIC0tbnYtc2l0ZS1iZzogI2ZmZmZmZjtcbi8vIC0tbnYtbGlnaHQtYmc6ICNmNGYzZjI7XG4vLyAtLW52LWRhcmstYmc6ICMxNDUzMTQ7XG4vLyAtLW52LXRleHQtY29sb3I6ICMwMDAwMDA7XG4vLyAtLW52LXRleHQtZGFyay1iZzogI2ZmZmZmZjtcbi8vIC0tbnYtYy0xOiAjY2IyY2ZmO1xuLy8gLS1udi1jLTI6ICNmZmU2MDA7XG5cbiR0Z3dmLWdyZWVuMzAwOiAjODZFRjg2O1xuJHRnd2YtZ3JlZW40MDA6ICM0QURFNEE7XG4kdGd3Zi1ncmVlbjUwMDogIzAwRkYwMDtcbiR0Z3dmLWdyZWVuNzAwOiAjMTU4MDE1O1xuJHRnd2YtZ3JlZW44MDA6ICMxNjY1MTY7XG5cbiR0Z3dmLWJsdWUtNzAwOiAjMDA2NmZmO1xuXG4kdGd3Zi15ZWxsb3cxMDA6ICNGRUZCRTI7XG4kdGd3Zi15ZWxsb3cyMDA6ICNGRUY5Q0E7XG4kdGd3Zi15ZWxsb3c0MDA6ICNGOEVCNzE7XG4kdGd3Zi15ZWxsb3c3MDA6ICNCNDdFMDk7XG4kdGd3Zi15ZWxsb3c4MDA6ICM5MjY4MEU7XG4kdGd3Zi15ZWxsb3c5MDA6ICM3ODU3MEY7XG5cbi8vR3JhZGllbnRzXG4uaGFzLXdoaXRlLXRvLXByaW1hcnktZ3JhZGllbnQtYmFja2dyb3VuZCB7XG5cdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxNDVkZWcsIHJnYigyNTUsMjU1LDI1NSkgMTUlLCByZ2IoMCwyNTUsMCkgMTAwJSk7XG5cblx0Ly8gVG9wIHJ1bGUgY292ZXJzIGJsb2NrcywgdGhlIHNlY29uZCBjb3ZlcnMuXG5cdGE6bm90KC5idXR0b24pOm5vdCgud3AtYmxvY2stZmlsZV9fYnV0dG9uKTpub3QoLndwLWJsb2NrLWJ1dHRvbl9fbGluayksXG5cdCsgZGl2IGE6bm90KC5idXR0b24pOm5vdCgud3AtYmxvY2stZmlsZV9fYnV0dG9uKTpub3QoLndwLWJsb2NrLWJ1dHRvbl9fbGluaykge1xuXHRcdGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCggOTBkZWcsIHJnYmEoMCwwLDAsMSkgMzAlLCByZ2JhKDI1NSwyNTUsMjU1LDEpIDEwMCUgKSAhaW1wb3J0YW50O1xuXG5cdFx0Jjpob3ZlciB7XG5cdFx0XHRiYWNrZ3JvdW5kOiB2YXIoLS1udi10ZXh0LWNvbG9yKSAhaW1wb3J0YW50O1xuXHRcdH1cblx0fVxufVxuXG4uaGFzLXByaW1hcnktdG8td2hpdGUtZ3JhZGllbnQtYmFja2dyb3VuZCB7XG5cdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxNDVkZWcsIHJnYigwLDI1NSwwKSAxNSUsIHJnYigyNTUsMjU1LDI1NSkgMTAwJSk7XG5cblx0Ly8gVG9wIHJ1bGUgY292ZXJzIGJsb2NrcywgdGhlIHNlY29uZCBjb3ZlcnMuXG5cdGE6bm90KC5idXR0b24pOm5vdCgud3AtYmxvY2stZmlsZV9fYnV0dG9uKTpub3QoLndwLWJsb2NrLWJ1dHRvbl9fbGluayksXG5cdCsgZGl2IGE6bm90KC5idXR0b24pOm5vdCgud3AtYmxvY2stZmlsZV9fYnV0dG9uKTpub3QoLndwLWJsb2NrLWJ1dHRvbl9fbGluaykge1xuXHRcdGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCggOTBkZWcsIHJnYmEoMCwwLDAsMSkgMzAlLCByZ2JhKDI1NSwyNTUsMjU1LDEpIDEwMCUgKSAhaW1wb3J0YW50O1xuXG5cdFx0Jjpob3ZlciB7XG5cdFx0XHRiYWNrZ3JvdW5kOiB2YXIoLS1udi10ZXh0LWNvbG9yKSAhaW1wb3J0YW50O1xuXHRcdH1cblx0fVxufVxuXG4uaGFzLXdoaXRlLXRvLWJsdWUtZ3JhZGllbnQtYmFja2dyb3VuZCB7XG5cdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxNDVkZWcsIHJnYigyNTUsMjU1LDI1NSkgMTUlLCByZ2IoMCwxMDIsMjU1KSAxMDAlKTtcblxuXHQvLyBUb3AgcnVsZSBjb3ZlcnMgYmxvY2tzLCB0aGUgc2Vjb25kIGNvdmVycy5cblx0YTpub3QoLmJ1dHRvbik6bm90KC53cC1ibG9jay1maWxlX19idXR0b24pOm5vdCgud3AtYmxvY2stYnV0dG9uX19saW5rKSxcblx0KyBkaXYgYTpub3QoLmJ1dHRvbik6bm90KC53cC1ibG9jay1maWxlX19idXR0b24pOm5vdCgud3AtYmxvY2stYnV0dG9uX19saW5rKSB7XG5cdFx0YmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCA5MGRlZywgcmdiYSgwLDAsMCwxKSAzMCUsIHJnYmEoMjU1LDI1NSwyNTUsMSkgMTAwJSApICFpbXBvcnRhbnQ7XG5cblx0XHQmOmhvdmVyIHtcblx0XHRcdGJhY2tncm91bmQ6IHZhcigtLW52LXRleHQtY29sb3IpICFpbXBvcnRhbnQ7XG5cdFx0fVxuXHR9XG59XG5cbi5oYXMtd2hpdGUtdG8tb3JhbmdlLWdyYWRpZW50LWJhY2tncm91bmQge1xuXHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTQ1ZGVnLCByZ2IoMjU1LDI1NSwyNTUpIDE1JSwgcmdiKDI1MCwxNzAsMCkgMTAwJSk7XG5cblx0Ly8gVG9wIHJ1bGUgY292ZXJzIGJsb2NrcywgdGhlIHNlY29uZCBjb3ZlcnMuXG5cdGE6bm90KC5idXR0b24pOm5vdCgud3AtYmxvY2stZmlsZV9fYnV0dG9uKTpub3QoLndwLWJsb2NrLWJ1dHRvbl9fbGluayksXG5cdCsgZGl2IGE6bm90KC5idXR0b24pOm5vdCgud3AtYmxvY2stZmlsZV9fYnV0dG9uKTpub3QoLndwLWJsb2NrLWJ1dHRvbl9fbGluaykge1xuXHRcdGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCggOTBkZWcsIHJnYmEoMCwwLDAsMSkgMzAlLCByZ2JhKDI1NSwyNTUsMjU1LDEpIDEwMCUgKSAhaW1wb3J0YW50O1xuXG5cdFx0Jjpob3ZlciB7XG5cdFx0XHRiYWNrZ3JvdW5kOiB2YXIoLS1udi10ZXh0LWNvbG9yKSAhaW1wb3J0YW50O1xuXHRcdH1cblx0fVxufVxuXG5cblxuIiwiLyoqXG4gKiBWYXJpYWJsZXMgZm9yIHVzZSB0aHJvdWdob3V0IHRoZSByZXN0IG9mIHRoZSBTQVNTIHBhcnRpYWxzLlxuKi9cblxuXG4vLyBDb21tb25seSB1c2VkIGxheW91dCBkaW1lbnNpb25zLlxuJGJvcmRlci13aWR0aDogMnB4O1xuJGJvcmRlci13aWR0aC10aGljazogNHB4O1xuXG4kYm9yZGVyLXJhZGl1czogMnJlbTtcblxuJHJlYWRpbmctd2lkdGg6IDgwMHB4O1xuXG4vLyAkaWNvbi1zaXplOiA0MHB4O1xuXG4kc21hbGwtc3BhY2luZzogMXJlbTtcbiRtZWRpdW0tc3BhY2luZzogMnJlbTtcbiRsYXJnZS1zcGFjaW5nOiAzcmVtO1xuJHhsLXNwYWNpbmc6IDRyZW07IiwiLyogRm9udCBkZWZpbml0aW9ucyAqL1xuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ3R3a2V2ZXJldHQnO1xuICAgIHNyYzogdXJsKCcuLi9mb250cy90d2tldmVyZXR0L3R3a2V2ZXJldHQtcmVndWxhci53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgIHVybCgnLi4vZm9udHMvdHdrZXZlcmV0dC90d2tldmVyZXR0LXJlZ3VsYXIud29mZicpIGZvcm1hdCgnd29mZicpO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICd0d2tldmVyZXR0JztcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvdHdrZXZlcmV0dC90d2tldmVyZXR0LXJlZ3VsYXJpdGFsaWMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL3R3a2V2ZXJldHQvdHdrZXZlcmV0dC1yZWd1bGFyaXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbiIsIi8qKlxuICogRGVmYXVsdCB0eXBvZ3JhcGh5IHN0eWxlcyBhbmQgdmFyaWFibGVzLlxuICogT3ZlcnJpZGVzIG9mIGtleSBUd2VudHlUd2VudHkgdHlwb2dyYXBoeSBzdHlsZXMuXG4qL1xuXG4vKiBEZWZhdWx0IHR5cG9ncmFwaHkgc3R5bGVzIGFuZCB2YXJpYWJsZXMgKi9cbiRib2R5LWZvbnQ6ICd0d2tldmVyZXR0Jywgc2Fucy1zZXJpZjtcbiR0aXRsZS1mb250OiAndHdrZXZlcmV0dCcsIHNhbnMtc2VyaWY7XG5cbi8vICRkZWZhdWx0LWZvbnQtd2VpZ2h0OiAzMDA7XG4kYm9sZC1mb250LXdlaWdodDogNzAwO1xuIiwiLyoqXG4gKiBTdHlsaW5nIG92ZXJyaWRlcyBmb3IgYmFzaWMgSFRNTCBlbGVtZW50cy5cbiovXG5cbmJvZHkge1xuXHQvLyBmb250LWZhbWlseTogJGJvZHktZm9udDtcblx0Ly8gZm9udC13ZWlnaHQ6ICRkZWZhdWx0LWZvbnQtd2VpZ2h0O1xuXHQvLyBjb2xvcjogJGRlZmF1bHQtZm9udC1jb2xvdXI7XG5cdHdvcmQtd3JhcDogYnJlYWstd29yZDtcbn1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG5cdGZvbnQtZmFtaWx5OiAkdGl0bGUtZm9udDtcblx0Ly8gZm9udC13ZWlnaHQ6ICRib2xkLWZvbnQtd2VpZ2h0O1xuXG5cdD4gYSB7XG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRcdFxuXHRcdCY6aG92ZXIge1xuXHRcdFx0dGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG5cdFx0fVxuXHR9XG59XG5cbmgyIHtcblx0bWFyZ2luLXRvcDogcmVtKCRtZWRpdW0tc3BhY2luZyk7XG5cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChtZCkge1xuXHRcdG1hcmdpbi10b3A6IHJlbSgkbGFyZ2Utc3BhY2luZyk7XHRcblx0fVxufVxuXG5oMyB7XG5cdG1hcmdpbi10b3A6IHJlbSgkbWVkaXVtLXNwYWNpbmcpO1xuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobWQpIHtcblx0XHRtYXJnaW4tdG9wOiByZW0oJGxhcmdlLXNwYWNpbmcpO1x0XG5cdH1cbn1cblxuaDQge1xuXHRtYXJnaW4tdG9wOiAxLjNyZW07XG5cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChtZCkge1xuXHRcdG1hcmdpbi10b3A6IDEuNXJlbTtcdFxuXHR9XG59XG5wIHtcblx0bWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cblxuIiwiLy8gQnJlYWtwb2ludCB2aWV3cG9ydCBzaXplcyBhbmQgbWVkaWEgcXVlcmllcy5cbi8vXG4vLyBCcmVha3BvaW50cyBhcmUgZGVmaW5lZCBhcyBhIG1hcCBvZiAobmFtZTogbWluaW11bSB3aWR0aCksIG9yZGVyIGZyb20gc21hbGwgdG8gbGFyZ2U6XG4vL1xuLy8gICAgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KVxuLy9cbi8vIFRoZSBtYXAgZGVmaW5lZCBpbiB0aGUgYCRncmlkLWJyZWFrcG9pbnRzYCBnbG9iYWwgdmFyaWFibGUgaXMgdXNlZCBhcyB0aGUgYCRicmVha3BvaW50c2AgYXJndW1lbnQgYnkgZGVmYXVsdC5cblxuLy8gTmFtZSBvZiB0aGUgbmV4dCBicmVha3BvaW50LCBvciBudWxsIGZvciB0aGUgbGFzdCBicmVha3BvaW50LlxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSlcbi8vICAgIG1kXG4vLyAgICA+PiBicmVha3BvaW50LW5leHQoc20sICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCkpXG4vLyAgICBtZFxuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtLCAkYnJlYWtwb2ludC1uYW1lczogKHhzIHNtIG1kIGxnIHhsKSlcbi8vICAgIG1kXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludC1uYW1lczogbWFwLWtleXMoJGJyZWFrcG9pbnRzKSkge1xuICAkbjogaW5kZXgoJGJyZWFrcG9pbnQtbmFtZXMsICRuYW1lKTtcbiAgQHJldHVybiBpZigkbiA8IGxlbmd0aCgkYnJlYWtwb2ludC1uYW1lcyksIG50aCgkYnJlYWtwb2ludC1uYW1lcywgJG4gKyAxKSwgbnVsbCk7XG59XG5cbi8vIE1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTnVsbCBmb3IgdGhlIHNtYWxsZXN0IChmaXJzdCkgYnJlYWtwb2ludC5cbi8vXG4vLyAgICA+PiBicmVha3BvaW50LW1pbihzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KSlcbi8vICAgIDU3NnB4XG5AZnVuY3Rpb24gYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogbWFwLWdldCgkYnJlYWtwb2ludHMsICRuYW1lKTtcbiAgQHJldHVybiBpZigkbWluICE9IDAsICRtaW4sIG51bGwpO1xufVxuXG4vLyBNYXhpbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBsYXJnZXN0IChsYXN0KSBicmVha3BvaW50LlxuLy8gVGhlIG1heGltdW0gdmFsdWUgaXMgY2FsY3VsYXRlZCBhcyB0aGUgbWluaW11bSBvZiB0aGUgbmV4dCBvbmUgbGVzcyAwLjAycHhcbi8vIHRvIHdvcmsgYXJvdW5kIHRoZSBsaW1pdGF0aW9ucyBvZiBgbWluLWAgYW5kIGBtYXgtYCBwcmVmaXhlcyBhbmQgdmlld3BvcnRzIHdpdGggZnJhY3Rpb25hbCB3aWR0aHMuXG4vLyBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL21lZGlhcXVlcmllcy00LyNtcS1taW4tbWF4XG4vLyBVc2VzIDAuMDJweCByYXRoZXIgdGhhbiAwLjAxcHggdG8gd29yayBhcm91bmQgYSBjdXJyZW50IHJvdW5kaW5nIGJ1ZyBpbiBTYWZhcmkuXG4vLyBTZWUgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTE3ODI2MVxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtbWF4KHNtLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpKVxuLy8gICAgNzY3Ljk4cHhcbkBmdW5jdGlvbiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbmV4dDogYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICBAcmV0dXJuIGlmKCRuZXh0LCBicmVha3BvaW50LW1pbigkbmV4dCwgJGJyZWFrcG9pbnRzKSAtIC4wMnB4LCBudWxsKTtcbn1cblxuLy8gUmV0dXJucyBhIGJsYW5rIHN0cmluZyBpZiBzbWFsbGVzdCBicmVha3BvaW50LCBvdGhlcndpc2UgcmV0dXJucyB0aGUgbmFtZSB3aXRoIGEgZGFzaCBpbmZyb250LlxuLy8gVXNlZnVsIGZvciBtYWtpbmcgcmVzcG9uc2l2ZSB1dGlsaXRpZXMuXG4vL1xuLy8gICAgPj4gYnJlYWtwb2ludC1pbmZpeCh4cywgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KSlcbi8vICAgIFwiXCIgIChSZXR1cm5zIGEgYmxhbmsgc3RyaW5nKVxuLy8gICAgPj4gYnJlYWtwb2ludC1pbmZpeChzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KSlcbi8vICAgIFwiLXNtXCJcbkBmdW5jdGlvbiBicmVha3BvaW50LWluZml4KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gIEByZXR1cm4gaWYoYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50cykgPT0gbnVsbCwgXCJcIiwgXCItI3skbmFtZX1cIik7XG59XG5cbi8vIE1lZGlhIG9mIGF0IGxlYXN0IHRoZSBtaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE5vIHF1ZXJ5IGZvciB0aGUgc21hbGxlc3QgYnJlYWtwb2ludC5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCBhbmQgd2lkZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC11cCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWluOiBicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKTtcbiAgQGlmICRtaW4ge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIE1lZGlhIG9mIGF0IG1vc3QgdGhlIG1heGltdW0gYnJlYWtwb2ludCB3aWR0aC4gTm8gcXVlcnkgZm9yIHRoZSBsYXJnZXN0IGJyZWFrcG9pbnQuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQgYW5kIG5hcnJvd2VyLlxuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWF4OiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzKTtcbiAgQGlmICRtYXgge1xuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWF4KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIE1lZGlhIHRoYXQgc3BhbnMgbXVsdGlwbGUgYnJlYWtwb2ludCB3aWR0aHMuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgYmV0d2VlbiB0aGUgbWluIGFuZCBtYXggYnJlYWtwb2ludHNcbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LWJldHdlZW4oJGxvd2VyLCAkdXBwZXIsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogYnJlYWtwb2ludC1taW4oJGxvd2VyLCAkYnJlYWtwb2ludHMpO1xuICAkbWF4OiBicmVha3BvaW50LW1heCgkdXBwZXIsICRicmVha3BvaW50cyk7XG5cbiAgQGlmICRtaW4gIT0gbnVsbCBhbmQgJG1heCAhPSBudWxsIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1pbikgYW5kIChtYXgtd2lkdGg6ICRtYXgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWF4ID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJGxvd2VyLCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWluID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkdXBwZXIsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG5cbi8vIE1lZGlhIGJldHdlZW4gdGhlIGJyZWFrcG9pbnQncyBtaW5pbXVtIGFuZCBtYXhpbXVtIHdpZHRocy5cbi8vIE5vIG1pbmltdW0gZm9yIHRoZSBzbWFsbGVzdCBicmVha3BvaW50LCBhbmQgbm8gbWF4aW11bSBmb3IgdGhlIGxhcmdlc3Qgb25lLlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IG9ubHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQsIG5vdCB2aWV3cG9ydHMgYW55IHdpZGVyIG9yIG5hcnJvd2VyLlxuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtb25seSgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWluOiBicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKTtcbiAgJG1heDogYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50cyk7XG5cbiAgQGlmICRtaW4gIT0gbnVsbCBhbmQgJG1heCAhPSBudWxsIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1pbikgYW5kIChtYXgtd2lkdGg6ICRtYXgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWF4ID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJG5hbWUsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtaW4gPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKCRuYW1lLCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuIiwiLyogVXNlZnVsIGNsYXNzZXMgdGhhdCBjYW4gYmUgcmV1c2VkIGluIGFsbCBzb3J0cyBvZiBncmVhdCBwbGFjZXMgKi9cblxuLnJlYWRpbmctd2lkdGgge1xuXHRtYXgtd2lkdGg6ICRyZWFkaW5nLXdpZHRoO1xuXHRtYXJnaW4tbGVmdDogYXV0bztcblx0bWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuXG4vLyBBbHNvIGFuIG92ZXJyaWRlIGluIHdwLWJsb2NrLWNvbHMsIGNoZWNrIHRoZXJlLlxuLmhpZGUtaW1hZ2Utb24tbW9iaWxlIHtcblx0aW1nIHtcblx0XHRkaXNwbGF5OiBub25lO1xuXG5cdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChtZCkge1xuXHRcdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0fVxuXHR9XG59XG5cbi8qIFBhZGRpbmcgICAgKi9cbi5wdC0wIHtcblx0cGFkZGluZy10b3A6IDA7XG59XG5cbi5wYi0wLCAubm8tcGFkZGluZy1ib3R0b20ge1xuXHRwYWRkaW5nLWJvdHRvbTogMCAhaW1wb3J0YW50O1xufVxuLnBiLTQge1xuXHRwYWRkaW5nLWJvdHRvbTogMXJlbTtcbn1cbi5weC0wIHtcblx0cGFkZGluZy1sZWZ0OiAwICFpbXBvcnRhbnQ7XG5cdHBhZGRpbmctcmlnaHQ6IDAgIWltcG9ydGFudDtcbn1cblxuXG4vKiBNYXJnaW4gICAgICAqL1xuXG4vLyBXZSBoYXZlIHRoZSBtb3JlIHZlcmJvc2UgdmVyc2lvbiBmb3IgY29udGVudCBlZGl0b3JzLlxuLm10LTAsIC5uby1tYXJnaW4tdG9wIHtcblx0bWFyZ2luLXRvcDogMCAhaW1wb3J0YW50O1xufVxuXG4ubWItMCwgLm5vLW1hcmdpbi1ib3R0b20ge1xuXHRtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG5cblxuXG4vKiBCb3JkZXIgICAgICAqL1xuLm5vLWJvcmRlci10b3Age1xuXHRib3JkZXItdG9wOiBub25lICFpbXBvcnRhbnQ7XG59XG4ubm8tYm9yZGVyLWJvdHRvbSB7XG5cdGJvcmRlci1ib3R0b206IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLmJvcmRlci10b3Age1xuXHRib3JkZXItdG9wOiAkYm9yZGVyLXdpZHRoIHNvbGlkIHZhcigtLW52LXRleHQtY29sb3IpO1xufVxuLmJvcmRlci1ib3R0b20ge1xuXHRib3JkZXItYm90dG9tOiAkYm9yZGVyLXdpZHRoIHNvbGlkIHZhcigtLW52LXRleHQtY29sb3IpO1xufVxuLmJvcmRlci1yaWdodCB7XG5cdGJvcmRlci1yaWdodDogJGJvcmRlci13aWR0aCBzb2xpZCB2YXIoLS1udi10ZXh0LWNvbG9yKTtcbn1cbi5ib3JkZXItbGVmdCB7XG5cdGJvcmRlci1sZWZ0OiAkYm9yZGVyLXdpZHRoIHNvbGlkIHZhcigtLW52LXRleHQtY29sb3IpO1xufVxuIiwiLyoqXG4gKiBCYXNlIGxheW91dCBzdHlsZXMuXG4gKiBUaGVzZSBhcmUgbGFyZ2VseSBnb2luZyB0byBiZSBhZmZlY3RlZCB0aGUgb3V0ZXIgbW9zdCBjb250YWluZXJzIG9mIGVhY2ggcGFnZS5cbiovXG5cbi5lbnRyeS1jb250ZW50IHtcblxuXHQ+IGRpdltjbGFzcyo9XCJ3cC1ibG9jay1cIl0ge1xuXHRcdG1hcmdpbi10b3A6IHJlbSgkbWVkaXVtLXNwYWNpbmcpO1xuXG5cdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChtZCkge1xuXHRcdFx0bWFyZ2luLXRvcDogcmVtKCRsYXJnZS1zcGFjaW5nKTtcdFxuXHRcdH1cblxuXHRcdC8vIFdlIHdhbnQgdGhlIHRvcCBtb3N0IGVsZW1lbnQgdG8gYnV0dCB1cCB1bmRlciB0aGUgaGVhZGVyLlxuXHRcdCY6Zmlyc3QtY2hpbGQge1xuXHRcdFx0bWFyZ2luLXRvcDogMDtcblx0XHR9XG5cdFx0Ly8gV2Ugd2FudCB0aGUgdG9wIG1vc3QgZWxlbWVudCB0byBidXR0IHVwIHVuZGVyIHRoZSBoZWFkZXIuXG5cdFx0JjpsYXN0LWNoaWxkIHtcblx0XHRcdGJvcmRlcjogMDtcblx0XHR9XG5cblx0XHQ+IGRpdltjbGFzcyo9XCJfX2lubmVyLWNvbnRhaW5lclwiXSB7XG5cdFx0XHRwYWRkaW5nLXRvcDogcmVtKCRtZWRpdW0tc3BhY2luZyk7XG5cdFx0XHRwYWRkaW5nLWJvdHRvbTogcmVtKCRtZWRpdW0tc3BhY2luZyk7XG5cblx0XHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobWQpIHtcblx0XHRcdFx0cGFkZGluZy10b3A6IHJlbSgkbGFyZ2Utc3BhY2luZyk7XHRcblx0XHRcdFx0cGFkZGluZy1ib3R0b206IHJlbSgkbGFyZ2Utc3BhY2luZyk7XG5cdFx0XHR9XG5cblx0XHRcdD4gaDI6Zmlyc3Qtb2YtdHlwZSwgXG5cdFx0XHQ+IGgzOmZpcnN0LW9mLXR5cGUsIFxuXHRcdFx0PiBoNDpmaXJzdC1vZi10eXBlIHtcblx0XHRcdFx0bWFyZ2luLXRvcDogMDtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQ+IGRpdltjbGFzcyo9XCJoYXMtYmFja2dyb3VuZFwiXSxcblx0PiBkaXYud3AtYmxvY2stY292ZXIge1xuXG5cdFx0Ly8gQ29uc2VxdWVjdGl2ZSBiYWNrZ3JvdW5kIGNvbG91cmVkIGFyZWFzIHNob3VsZCBidXR0IHVwIGFnYWluc3QgZWFjaCBvdGhlci5cblx0XHQrIGRpdltjbGFzcyo9XCJoYXMtYmFja2dyb3VuZFwiXSB7XG5cdFx0XHRtYXJnaW4tdG9wOiAwO1xuXHRcdH1cdFx0XG5cdH1cblxuXHRwLCBvbCwgdWwge1xuXHRcdCsgLndwLWJsb2NrLWJ1dHRvbnMge1xuXHRcdFx0bWFyZ2luLXRvcDogMS41cmVtO1xuXHRcdH1cblx0fVxuXG5cdC8vIFNlY3Rpb24gYmxvY2tzIGZvbGxvd2VkIGJ5IHRleHQgbmVlZCBzcGFjaW5nLlxuXHQ+IC53cC1ibG9jay1jb3Zlcixcblx0PiAud3AtYmxvY2stZ3JvdXAge1xuXHRcdCsgcCwgKyBvbCwgKyB1bCxcblx0XHQrIGZpZ3VyZSB7XG5cdFx0XHRtYXJnaW4tdG9wOiByZW0oJG1lZGl1bS1zcGFjaW5nKTtcblxuXHRcdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChtZCkge1xuXHRcdFx0XHRtYXJnaW4tdG9wOiByZW0oJGxhcmdlLXNwYWNpbmcpO1x0XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cbi53cC1ibG9jay1idXR0b25zICsgaDMge1xuXHRtYXJnaW4tdG9wOiByZW0oJG1lZGl1bS1zcGFjaW5nKTtcbn1cblxuaDIgKyBoMyB7XG5cdG1hcmdpbi10b3A6IDFyZW07XG59XG5cbnAgKyBoMixcbi53cC1ibG9jay1idXR0b25zICsgaDIge1xuXHRtYXJnaW4tdG9wOiAkbWVkaXVtLXNwYWNpbmc7XG5cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChtZCkge1xuXHRcdG1hcmdpbi10b3A6IHJlbSgkeGwtc3BhY2luZyk7XHRcblx0fVxufVxuIiwiLyogQmFzaWMgbGF5b3V0IGZ1bmN0aW9ucywgd2lkdGhzIGV0YyAqL1xuXG4uYWxpZ253aWRlIHtcblx0d2lkdGg6IDEwMCU7XG5cdG1heC13aWR0aDogMTAwJTtcblx0bWFyZ2luLWxlZnQ6IGF1dG87XG5cdG1hcmdpbi1yaWdodDogYXV0bztcblxuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKG1kKSB7XG5cdFx0d2lkdGg6IDEwMHZ3O1xuXHRcdG1heC13aWR0aDogMTAwdnc7XG5cdFx0bWFyZ2luLWxlZnQ6IGNhbGMoIDUwJSAtIDUwdncgKTtcblx0XHRtYXJnaW4tcmlnaHQ6IGNhbGMoIDUwJSAtIDUwdncgKTtcblx0XHRwYWRkaW5nLWxlZnQ6IDE1cHg7XG5cdFx0cGFkZGluZy1yaWdodDogMTVweDtcblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeGwpIHtcblx0XHR3aWR0aDogMTE3MHB4O1xuXHRcdG1heC13aWR0aDogbm9uZTtcblx0XHRtYXJnaW4tbGVmdDogY2FsYyggNTAlIC0gKCAxMTcwcHggLyAyICkgKTtcblxuXHR9XG59XG5cbi8qIE92ZXJyaWRlIE5ldmUgaW5saW5lIHN0eWxlcyAqL1xuXG4jY29udGVudC5uZXZlLW1haW4gLmNvbnRhaW5lciAuYWxpZ25mdWxsID4gW2NsYXNzKj1cIl9faW5uZXItY29udGFpbmVyXCJdLCBcbiNjb250ZW50Lm5ldmUtbWFpbiAuY29udGFpbmVyIC5hbGlnbndpZGUgPiBbY2xhc3MqPVwiX19pbm5lci1jb250YWluZXJcIl0ge1xuXHRwYWRkaW5nLWxlZnQ6IDE1cHg7XG5cdHBhZGRpbmctcmlnaHQ6IDE1cHg7XG5cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdG1heC13aWR0aDogMTAwJTtcblx0XHRtYXJnaW4tbGVmdDogYXV0bztcblx0fVxuXHRcblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCh4bCkge1xuXHRcdG1heC13aWR0aDogMTE3MHB4O1xuXHR9XG59XG4iLCIvKiogQ29tbW9uIHN0eWxlcyBpbiB0aGUgTmV2ZSB0aGVtZSB0aGF0IHdlJ2QgbGlrZSB0byBvdmVyd3JpdGUuICovXG5cbi8vIENvbnRyb2wgdmVydGljYWwgc3BhY2luZyBhY3Jvc3MgbWFpbiBwYWdlIHRlbXBsYXRlIHR5cGVzLlxuLm52LWluZGV4LXBvc3RzLFxuLm52LXNpbmdsZS1wYWdlLXdyYXAsXG4ubnYtc2luZ2xlLXBvc3Qtd3JhcCB7XG5cdG1hcmdpbi10b3A6IDA7XG5cdG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi8vIEdldCBuaWNlIHNwYWNpbmcgYXQgdGhlIHRvcCBvZiB0aGUgcGFnZS5cbi5udi1pbmRleC1wb3N0cyAubnYtcGFnZS10aXRsZS13cmFwLFxuLm52LXBhZ2UtdGl0bGUtd3JhcCB7XG5cdG1hcmdpbi10b3A6ICRtZWRpdW0tc3BhY2luZztcblxuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCBtZCApIHtcblx0XHRtYXJnaW4tdG9wOiAkeGwtc3BhY2luZztcblx0fVxuXG5cdCYubnYtYmlnLXRpdGxlIC5udi1wYWdlLXRpdGxlIHtcblx0XHRib3JkZXItd2lkdGg6IDA7XG5cdH1cbn1cblxuLm52LWNvbnRlbnQtd3JhcCB7XG5cdG1hcmdpbi10b3A6IHJlbSgkbWVkaXVtLXNwYWNpbmcpO1xuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoIHNtICkge1xuXHRcdG1hcmdpbi10b3A6ICR4bC1zcGFjaW5nO1xuXHR9XG5cblx0PiAqOmxhc3QtY2hpbGQge1xuXHRcdG1hcmdpbi1ib3R0b206IDJyZW07XG5cdFx0XG5cdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCggc20gKSB7XG5cdFx0XHRtYXJnaW4tYm90dG9tOiAzcmVtO1xuXHRcdH1cblx0fVxufVxuXG4ubnYtcGFnZS10aXRsZS13cmFwICsgLm52LWNvbnRlbnQtd3JhcCB7XG5cdG1hcmdpbi10b3A6IDA7XG59XG5cbi8vIExpbmsgc3R5bGluZy5cbi5udi1jb21tZW50LWNvbnRlbnQgYSxcbi5udi1jb250ZW50LXdyYXAgYTpub3QoLmJ1dHRvbik6bm90KC53cC1ibG9jay1maWxlX19idXR0b24pOm5vdCgud3AtYmxvY2stYnV0dG9uX19saW5rKSxcbi53cC1ibG9jay1wb3N0LWNvbnRlbnQgYTpub3QoLmJ1dHRvbik6bm90KC53cC1ibG9jay1maWxlX19idXR0b24pOm5vdCgud3AtYmxvY2stYnV0dG9uX19saW5rKSxcbi5mZWxsb3dzaGlwLXBvc3RfX2NvbnRlbnQtd2lkZ2V0LWNvbnRhaW5lciBhLFxuLm52LXBvc3QtbmF2aWdhdGlvbiBhIHtcblx0Y29sb3I6IHZhcigtLW52LXRleHQtY29sb3IpO1xuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cdGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCggMjcwZGVnLCByZ2JhKDAsMjU1LDAsMSkgMzAlLCByZ2JhKDIwLDgzLDIwLDEpIDEwMCUgKTtcblx0YmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuXHRiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMnB4O1xuXHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDk1JTtcblxuXHQmOmhvdmVyIHtcblx0XHRjb2xvcjogd2hpdGU7XG5cdFx0YmFja2dyb3VuZDogdmFyKC0tbnYtdGV4dC1jb2xvcik7XG5cdH1cbn0iLCIvKipcbiAqIEN1c3RvbSBjbGFzZXNzIHRoYXQgY2FuIGJlIGFwcGxpZWQgdG8gR3V0ZW5iZXJnIGJsb2Nrcy5cbiovXG5cbi8qIDEuIEdFTkVSQUwgQ0xBU1NFUyAgICAgKi9cbi8qIDIuIENPTE9VUiBDTEFTU0VTICAgICAgKi9cblxuXG5cbi8qIDEuIEdFTkVSQUwgQ0xBU1NFUyAgICAgKi9cblxuLy8gVGhpcyBzaG91bGQgYmUgaW4gdGhlIHRoZW1lIGJ1dCBmb3Igc29tZSByZWFzb24gZG9lc24ndCBhbHdheXMgYXBwbHkuXG4vLyBTb21ldGltZXMgaXQgc2hvd3MgdXAgYXMgYW4gaW5saW5lIHN0eWxlLlxuLy8gSXQncyBoZXJlIGFzIGJhY2t1cC5cbi5hbGlnbmZ1bGwge1xuXHRwYWRkaW5nLXJpZ2h0OiAwO1xuXHRwYWRkaW5nLWxlZnQ6IDA7XG59XG5cbi5hbGlnbmZ1bGwgPiBbY2xhc3MqPVwiX19pbm5lci1jb250YWluZXJcIl0sXG4uYWxpZ253aWRlID4gW2NsYXNzKj1cIl9faW5uZXItY29udGFpbmVyXCJdIHtcblx0bWFyZ2luLWxlZnQ6IGF1dG87XG5cdG1hcmdpbi1yaWdodDogYXV0bztcbn1cbi5hbGlnbmZ1bGwgPiBbY2xhc3MqPVwiX19pbm5lci1jb250YWluZXJcIl0ge1xuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7XG5cdFx0bWF4LXdpZHRoOiA3MCU7XG5cdH1cbn1cblxuXG4vKiAyLiBDT0xPVVIgQ0xBU1NFUyAgICAgICovXG5cblxuIiwiLyoqXG4gKiBDdXN0b21pc2F0aW9ucyBmb3IgdGhlIGdyb3VwIGJsb2NrLlxuKi9cblxuLyogMS4gR0VORVJBTCBCTE9DSyBDVVNUT01JU0FUSU9OUyAqL1xuLyogMi4gQ1VTVE9NIENMQVNTRVMgICAgICAgICAgICAgICAqL1xuXG5cbi8qIDEuIEdFTkVSQUwgQkxPQ0sgQ1VTVE9NSVNBVElPTlMgKi9cbi5lbnRyeS1jb250ZW50ID4gLndwLWJsb2NrLWdyb3VwOm5vdCgubm8tYm9yZGVyKSB7XG5cdGJvcmRlci10b3A6ICRib3JkZXItd2lkdGggc29saWQgdmFyKC0tbnYtdGV4dC1jb2xvcik7XG5cdGJvcmRlci1ib3R0b206ICRib3JkZXItd2lkdGggc29saWQgdmFyKC0tbnYtdGV4dC1jb2xvcik7XG59XG5cbi53cC1ibG9jay1ncm91cCB7XG5cblx0Ji5ncmFkaWVudC1vdXRsaW5lIHtcblx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLHJnYigyMzgsMjM4LDIzOCkgMCUscmdiKDE5MiwyMDEsMTkxKSAxMDAlKTtcblx0XHRwYWRkaW5nOiAwLjI1cmVtO1xuXG5cdFx0JjpudGgtb2YtdHlwZShldmVuKSB7XG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCByZ2IoMTkyLDIwMSwxOTEpIDAlLHJnYigyMzgsMjM4LDIzOCkgMTAwJSk7XG5cdFx0fVxuXG5cdFx0LndwLWJsb2NrLWdyb3VwX19pbm5lci1jb250YWluZXIge1xuXHRcdFx0YmFja2dyb3VuZDogd2hpdGU7XG5cdFx0XHRwYWRkaW5nOiAxcmVtO1xuXG5cdFx0XHQ+IGgyOmZpcnN0LW9mLXR5cGUsID4gaDM6Zmlyc3Qtb2YtdHlwZSwgPiBoNDpmaXJzdC1vZi10eXBlIHtcblx0XHRcdFx0bWFyZ2luLXRvcDogMDtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cblxuIiwiLyoqXG4gKiBUd2Vha3MgYW5kIGNoYW5nZXMgZm9yIHRoZSBkZWZhdWx0IEd1dGVuYmVyZyBjb3ZlciBibG9jay5cbiAqIEluIHRoaXMgc2l0ZSwgd2UgZXhwZWN0IHRoZSBibG9jayB0byBiZSBpbnNpZGUgdGhlIGdyb3VwIGJsb2NrLlxuKi9cblxuLndwLWJsb2NrLWNvdmVyIHtcblx0Ym9yZGVyLWJvdHRvbTogc29saWQgJGJvcmRlci13aWR0aCBibGFjaztcblxuXHQmLmhpZGUtaW1hZ2Utb24tbW9iaWxlIHtcblx0XHRcblx0XHRpbWcge1xuXHRcdFx0ZGlzcGxheTogbm9uZTtcblx0XHRcblx0XHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobWQpIHtcblx0XHRcdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdCYuaGlkZS1iZy1vbi1tb2JpbGUgLndwLWJsb2NrLWNvdmVyX19iYWNrZ3JvdW5kIHtcblx0XHRcblx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHtcblx0XHRcdGJhY2tncm91bmQ6IG5vbmUgIWltcG9ydGFudDtcblx0XHR9XG5cdH1cbn1cblxuIiwiLyoqXG4gKiBDdXN0b21zYXRpb25zIHRvIHRoZSBjb2x1bW5zIGxheW91dFxuKi9cblxuLndwLWJsb2NrLWNvbHVtbnMge1xuXG5cdCY6bm90KC5uby1ib3JkZXIpIC53cC1ibG9jay1jb2x1bW4ge1xuXHRcdC8vIDc4MnB4IGlzIHRoZW1lIGJyZWFrcG9pbnQsIG5vdCBvbmUgb2Ygb3VyIHN0YW5kYXJkIG9uZXMuXG5cdFx0QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzgycHgpIHtcblx0XHRcdGJvcmRlci1yaWdodDogJGJvcmRlci13aWR0aCBzb2xpZCB2YXIoLS1udi10ZXh0LWNvbG9yKTtcblx0XHRcdHBhZGRpbmctcmlnaHQ6IDJyZW07XG5cdFx0fVxuXG5cdFx0JjpsYXN0LW9mLXR5cGUge1xuXHRcdFx0Ym9yZGVyOiBub25lO1xuXHRcdH1cblx0fVxuXG5cdC53cC1ibG9jay1jb2x1bW4ge1xuXHRcdG1hcmdpbi1ib3R0b206IDJyZW07XG5cblx0XHQ+ICo6Zmlyc3QtY2hpbGQge1xuXHRcdFx0bWFyZ2luLXRvcDogMDtcblx0XHR9XG5cblx0XHQ+IGgyLCA+IGgzIHtcblx0XHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cdFx0XHRAZXh0ZW5kIC5ib3JkZXItYm90dG9tO1xuXHRcdFx0d2lkdGg6IDEwMCU7XG5cdFx0fVxuXG5cdFx0cCB7XG5cdFx0XHRwYWRkaW5nOiAxcmVtIDAgMCAwO1xuXHRcdFx0bWFyZ2luOiAwO1xuXHRcdH1cblxuXHRcdC5oaWRlLWltYWdlLW9uLW1vYmlsZSB7XG5cdFx0XHRpbWcge1xuXHRcdFxuXHRcdFx0XHQvLyBPdmVycmlkZSBzdHlsaW5nIGluIHV0aWxpdGllcyBmaWxlLlxuXHRcdFx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKG1kKSB7XG5cdFx0XHRcdFx0ZGlzcGxheTogbm9uZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc4MnB4KSB7XG5cdFx0XHRcdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cblxuIiwiLyoqXG4gKiBDdXN0b21pc2F0aW9ucyBmb3IgZ3V0ZW5iZXJnIGJ1dHRvbiBibG9ja3MuXG4qL1xuXG4ud3AtYmxvY2stYnV0dG9ucyB7XG5cdG1hcmdpbi10b3A6IDFyZW07XG5cdG1hcmdpbi1ib3R0b206IDFyZW07XG59XG5cbi53cC1ibG9jay1idXR0b25fX2xpbmsge1xuXHRtaW4taGVpZ2h0OiAzcmVtOyAvLyBLZWVwIHNhbWUgc3RhbmRhcmQgaGVpZ2h0IGFzIGZvcm0gZmllbGRzO1xuXHRib3JkZXI6ICRib3JkZXItd2lkdGggc29saWQgYmxhY2sgIWltcG9ydGFudDtcblx0XG5cdCY6aG92ZXIge1xuXHRcdGJhY2tncm91bmQtY29sb3I6IHZhcigtLW52LXNpdGUtYmcpO1xuXHRcdGNvbG9yOiB2YXIoLS1udi10ZXh0LWNvbG9yKTtcblx0fVxufVxuXG5cblxuXG4iLCIvKiBTdHlsaW5nIGZvciB0aGUgYmxvY2txdW90ZSAocXVvdGVzKSBibG9jayAqL1xuXG4kcXVvdGUtYm9yZGVyLWNvbG9yOiAkdGd3Zi1ncmVlbjUwMDtcblxuLyogMS4gQkxPQ0tRVU9URSAgICAgKi9cbi8qIDIuIFBVTExRVU9URSAgICAgICovXG5cblxuLyogMS4gQkxPQ0tRVU9URSAgICAgKi9cbmJsb2NrcXVvdGU6OmFmdGVyLFxuYmxvY2txdW90ZTo6YmVmb3JlIHtcblx0ZGlzcGxheTogbm9uZTtcbn1cblxuYmxvY2txdW90ZS53cC1ibG9jay1xdW90ZSB7XG5cdGJvcmRlci1sZWZ0OiAkYm9yZGVyLXdpZHRoLXRoaWNrIHNvbGlkICRxdW90ZS1ib3JkZXItY29sb3I7XG5cdGZvbnQtd2VpZ2h0OiAkYm9sZC1mb250LXdlaWdodDtcblx0cGFkZGluZy1ib3R0b206ICRzbWFsbC1zcGFjaW5nICFpbXBvcnRhbnQ7XG5cblx0PiAqIHtcblx0XHRwYWRkaW5nOiAxcmVtO1xuXHR9XG5cblx0ZW0ge1xuXHRcdGZvbnQtc3R5bGU6IG5vcm1hbDtcblx0fVx0XG5cblx0Y2l0ZSB7XG5cdFx0Zm9udC1mYW1pbHk6ICRib2R5LWZvbnQ7XG5cdFx0Y29sb3I6ICR0Z3dmLWdyZWVuNDAwO1xuXHRcdHBhZGRpbmctdG9wOiAwO1xuXHRcdHBhZGRpbmctYm90dG9tOiAwO1xuXG5cdFx0Jjo6YmVmb3JlIHtcblx0XHRcdGNvbnRlbnQ6ICctICc7XG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0XHR3aWR0aDogMWVtO1xuXHRcdFx0aGVpZ2h0OiAxcmVtO1xuXHRcdFx0bWFyZ2luLXJpZ2h0OiAwLjVyZW07XG5cdFx0fVxuXHR9XG5cblx0Ji5pcy1zdHlsZS1sYXJnZSB7XG5cdFx0cGFkZGluZzogMDtcblx0XHRcblx0XHRwIHtcblx0XHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihzbSkge1xuXHRcdFx0XHRmb250LXNpemU6IDEuNHJlbTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRjaXRlIHtcblx0XHRcdHRleHQtYWxpZ246IGxlZnQ7XG5cdFx0fVxuXG5cdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChtZCkge1xuXHRcdFx0cGFkZGluZy1sZWZ0OiAxcmVtO1xuXHRcdH1cblx0fVxuXG5cdCYuaXMtc3R5bGUtZGVmYXVsdCB7XG5cdFx0cCB7XG5cdFx0XHRmb250LXNpemU6IDEuM2VtO1xuXHRcdH1cblx0fVxufVxuXG5cbi8qIDIuIFBVTExRVU9URSAgICAgICovXG4ud3AtYmxvY2stcHVsbHF1b3RlIHtcblx0Zm9udC1zaXplOiB2YXIoLS13cC0tcHJlc2V0LS1mb250LXNpemUtLW1lZGl1bSk7XG5cdGJvcmRlci10b3AtY29sb3I6ICRxdW90ZS1ib3JkZXItY29sb3I7XG5cdGJvcmRlci1ib3R0b20tY29sb3I6ICRxdW90ZS1ib3JkZXItY29sb3I7XG5cdG1hcmdpbi10b3A6ICRtZWRpdW0tc3BhY2luZztcblx0bWFyZ2luLWJvdHRvbTogJG1lZGl1bS1zcGFjaW5nO1xuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobWQpIHtcblx0XHRtYXJnaW4tdG9wOiAkeGwtc3BhY2luZztcblx0XHRtYXJnaW4tYm90dG9tOiAkeGwtc3BhY2luZztcblx0fVxufSIsIi8qIDEuIEdFTkVSQUwgICAgICAgICAgICAgKi9cbi8qIDIuIFFVRVNUSU9OIFNUWUxJTkcgICAgKi9cbi8qIDMuIEFOU1dFUiBTVFlMSU5HICAgICAgKi9cblxuXG4uc2NoZW1hLWZhcS1zZWN0aW9uIHtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXG5cdCY6aG92ZXIge1xuXHRcdGN1cnNvcjogcG9pbnRlcjtcblx0fVxuXG5cdC8vIENvbnRyb2xzIHNwYWNpbmcgYmV0d2VlbiBxdWVzdGlvbnMuXG5cdCY6YmVmb3JlIHtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRjb250ZW50OiAnJztcblx0XHR3aWR0aDogMTAwJTtcblx0XHRoZWlnaHQ6IDFweDtcblx0XHRtYXJnaW46IDFyZW0gMDtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1udi1wcmltYXJ5LWFjY2VudCk7XG5cblx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKG1kKSB7XG5cdFx0XHRtYXJnaW46IDJyZW0gMDtcblx0XHR9XG5cblx0XHQvLyBPdmVycmlkZSBhIGNvdXBsZSBvZiBiYWNrZW5kIGNoYW5nZXMuXG5cdFx0Ly8gU2VlaW5nIHRoZXNlIGluIHRoZSBiYWNrZW5kIG1ha2VzIHRoZSBlZGl0aW5nIGV4cGVyaWVuY2UgY29uZnVzaW5nLlxuXHRcdC5ibG9jay1lZGl0b3ItYmxvY2stbGlzdF9fYmxvY2sgJiB7XG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcblx0XHRcdG1hcmdpbi10b3A6IDA7XG5cdFx0fVxuXHR9XG5cblx0JjpsYXN0LW9mLXR5cGUge1xuXHRcdHBhZGRpbmctYm90dG9tOiAxcmVtO1xuXHRcdG1hcmdpbi1ib3R0b206IDFyZW07XG5cdFx0Ym9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLW52LXByaW1hcnktYWNjZW50KTtcblxuXHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobWQpIHtcblx0XHRcdHBhZGRpbmctYm90dG9tOiAycmVtO1xuXHRcdFx0bWFyZ2luLWJvdHRvbTogMnJlbTtcblx0XHR9XG5cdH1cbn1cblxuXG4vKiAyLiBRVUVTVElPTiBTVFlMSU5HICAgICovXG4uc2NoZW1hLWZhcS1xdWVzdGlvbiB7XG5cdGRpc3BsYXk6IGJsb2NrOyAvLyBJb1MgU2FmYXJpIGJ1ZyBmaXguXG5cdHBhZGRpbmctcmlnaHQ6IDIuMnJlbTtcblx0bWFyZ2luLWJvdHRvbTogMC42cmVtO1xuXHRmb250LWZhbWlseTogJHRpdGxlLWZvbnQ7XG5cdC8vZm9udC1zaXplOiAxLjVlbTsgLy8gSDMgc2l6ZS5cblx0bGluZS1oZWlnaHQ6IDEuMztcblxuXHQvLyBTdHlsZXMgZm9yIGZyb250LWVuZCBvbmx5LlxuXHQvLyBTZWVpbmcgdGhlc2UgaW4gdGhlIGJhY2tlbmQgbWFrZXMgdGhlIGVkaXRpbmcgZXhwZXJpZW5jZSBjb25mdXNpbmcuXG5cdCY6bm90KC5ibG9jay1lZGl0b3ItcmljaC10ZXh0X19lZGl0YWJsZSkge1xuXG5cdFx0Ly8gRHJvcGRvd24gaWNvbi5cblx0XHQmOmFmdGVyIHtcblx0XHRcdCRpY29uLXNpemU6IDMwcHg7XG5cblx0XHRcdGNvbnRlbnQ6ICcnO1xuXHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0dG9wOiAxLjNyZW07XG5cdFx0XHRyaWdodDogMDtcblx0XHRcdGhlaWdodDogJGljb24tc2l6ZTtcblx0XHRcdHdpZHRoOiAkaWNvbi1zaXplO1xuXHRcdFx0dHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG5cdFx0XHR0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBsaW5lYXI7XG5cdFx0XHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoICcuLi9pbWcvY2FyZXQtZG93bi5zdmcnICk7XG5cdFx0XHRiYWNrZ3JvdW5kLXNpemU6ICRpY29uLXNpemUgJGljb24tc2l6ZTtcblx0XHRcdGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG5cdFx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuXG5cdFx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKG1kKSB7XG5cdFx0XHRcdHRvcDogMi4zcmVtO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC5pcy1vcGVuICYge1xuXHRcdFx0Jjo6YWZ0ZXIge1xuXHRcdFx0XHR0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuXG4vKiAzLiBBTlNXRVIgU1RZTElORyAgICAqL1xuLnNjaGVtYS1mYXEtYW5zd2VyIHtcblxuXHQvLyBTdHlsZXMgZm9yIGZyb250LWVuZCBvbmx5LlxuXHQvLyBTZWVpbmcgdGhlc2UgaW4gdGhlIGJhY2tlbmQgbWFrZXMgdGhlIGVkaXRpbmcgZXhwZXJpZW5jZSBjb25mdXNpbmcuXG5cdCY6bm90KC5ibG9jay1lZGl0b3ItcmljaC10ZXh0X19lZGl0YWJsZSkge1xuXHRcdGRpc3BsYXk6IG5vbmU7XG5cdFx0bWFyZ2luOiAxcmVtIDA7XG5cblx0XHQuaXMtb3BlbiAmIHtcblx0XHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdH1cblx0fVxuXG5cdC8vIFN0eWxlIGZvciBiYWNrZW5kIG9ubHkuXG5cdCYuYmxvY2stZWRpdG9yLXJpY2gtdGV4dF9fZWRpdGFibGUge1xuXHRcdG1hcmdpbi1ib3R0b206IDJyZW0gIWltcG9ydGFudDtcblx0fVxuXG5cdC8vIExhc3QgRkFRIGluIHRoZSBncm91cC5cblx0LnNjaGVtYS1mYXEtc2VjdGlvbjpsYXN0LW9mLXR5cGUgJiB7XG5cblx0XHQvLyBTdHlsZXMgZm9yIGZyb250LWVuZCBvbmx5LlxuXHRcdC8vIFNlZWluZyB0aGVzZSBpbiB0aGUgYmFja2VuZCBtYWtlcyB0aGUgZWRpdGluZyBleHBlcmllbmNlIGNvbmZ1c2luZy5cblx0XHQmOm5vdCguYmxvY2stZWRpdG9yLXJpY2gtdGV4dF9fZWRpdGFibGUpIHtcblx0XHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0fVxuXHR9XG59IiwiLyogU3R5bGVzIGZvciBkZWZhdWx0IGVtYmVkIGJsb2NrLCBlZyBmb3IgdmlkZW9zICovXG5cbi53cC1ibG9jay1lbWJlZCB7XG5cdG1hcmdpbjogJG1lZGl1bS1zcGFjaW5nIDA7XG5cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChtZCkge1xuXHRcdG1hcmdpbjogJHhsLXNwYWNpbmcgMDtcblx0fVxufSIsIi8qIFN0eWxpbmcgYW5kIGN1c3RvbWlzYXRpb25zIGZvciBpbWFnZXMuICovXG5cbi53cC1ibG9jay1pbWFnZSB7XG5cdGZpZ3VyZSA+IGEge1xuXHRcdGJhY2tncm91bmQtaW1hZ2U6IG5vbmUgIWltcG9ydGFudDtcblxuXHRcdCY6aG92ZXIge1xuXHRcdFx0YmFja2dyb3VuZDogbm9uZSAhaW1wb3J0YW50O1xuXHRcdH1cblx0fVxufSIsIi8qIFN0eWxpbmcgY3VzdG9taXNhdGlvbnMgZm9yIHRoZSBkZWZhdWx0IHNlcGFyYXRvciBibG9jay4gKi9cblxuaHIud3AtYmxvY2stc2VwYXJhdG9yIHtcblx0bWFyZ2luLXRvcDogcmVtKCRtZWRpdW0tc3BhY2luZyk7XG5cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChtZCkge1xuXHRcdG1hcmdpbi10b3A6IHJlbSgkbGFyZ2Utc3BhY2luZyk7XHRcblx0fVxufSJdfQ== */
