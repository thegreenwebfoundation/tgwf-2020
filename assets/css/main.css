/**
 * Main SCSS file loading in all the partials needed.
*/
/**
* Sass function and mixin to use rem units with optional pixel fallback.
* Author: Pierre Burel
* Source: https://github.com/pierreburel/sass-rem
*/
/**
 * Colour variables.
*/
/* For ref */
.has-white-to-primary-gradient-background {
  background: linear-gradient(145deg, white 15%, lime 100%); }
  .has-white-to-primary-gradient-background a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link),
  .has-white-to-primary-gradient-background + div a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link) {
    background-image: linear-gradient(90deg, black 30%, white 100%) !important; }
    .has-white-to-primary-gradient-background a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover,
    .has-white-to-primary-gradient-background + div a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover {
      background: var(--nv-text-color) !important; }

.has-primary-to-white-gradient-background {
  background: linear-gradient(145deg, lime 15%, white 100%); }
  .has-primary-to-white-gradient-background a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link),
  .has-primary-to-white-gradient-background + div a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link) {
    background-image: linear-gradient(90deg, black 30%, white 100%) !important; }
    .has-primary-to-white-gradient-background a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover,
    .has-primary-to-white-gradient-background + div a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover {
      background: var(--nv-text-color) !important; }

.has-white-to-orange-gradient-background {
  background: linear-gradient(145deg, white 15%, #faaa00 100%); }
  .has-white-to-orange-gradient-background a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link),
  .has-white-to-orange-gradient-background + div a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link) {
    background-image: linear-gradient(90deg, black 30%, white 100%) !important; }
    .has-white-to-orange-gradient-background a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover,
    .has-white-to-orange-gradient-background + div a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover {
      background: var(--nv-text-color) !important; }

/**
 * Variables for use throughout the rest of the SASS partials.
*/
/* Font definitions */
@font-face {
  font-family: 'twkeverett';
  src: url("../fonts/twkeverett/twkeverett-regular.woff2") format("woff2"), url("../fonts/twkeverett/twkeverett-regular.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'twkeverett';
  src: url("../fonts/twkeverett/twkeverett-regularitalic.woff2") format("woff2"), url("../fonts/twkeverett/twkeverett-regularitalic.woff") format("woff");
  font-weight: normal;
  font-style: italic; }

/**
 * Default typography styles and variables.
 * Overrides of key TwentyTwenty typography styles.
*/
/* Default typography styles and variables */
/**
 * Styling overrides for basic HTML elements.
*/
body {
  word-wrap: break-word; }

h1, h2, h3, h4, h5, h6 {
  font-family: "twkeverett", sans-serif; }
  h1 > a, h2 > a, h3 > a, h4 > a, h5 > a, h6 > a {
    text-decoration: none; }
    h1 > a:hover, h2 > a:hover, h3 > a:hover, h4 > a:hover, h5 > a:hover, h6 > a:hover {
      text-decoration: underline; }

h2 {
  margin-top: 2rem; }
  @media (min-width: 700px) {
    h2 {
      margin-top: 3rem; } }

h3 {
  margin-top: 2rem; }
  @media (min-width: 700px) {
    h3 {
      margin-top: 3rem; } }

h4 {
  margin-top: 1.3rem; }
  @media (min-width: 700px) {
    h4 {
      margin-top: 1.5rem; } }

p {
  margin-bottom: 1rem; }

/* Useful classes that can be reused in all sorts of great places */
.reading-width {
  max-width: 800px; }

/* Padding    */
.pt-0 {
  padding-top: 0; }

.pb-4 {
  padding-bottom: 1rem; }

.px-0 {
  padding-left: 0 !important;
  padding-right: 0 !important; }

/* Margin      */
.mt-0, .no-margin-top {
  margin-top: 0 !important; }

/* Border      */
.border-top, .tgwf-search-form form {
  border-top: 2px solid var(--nv-text-color); }

.border-bottom, .wp-block-columns .wp-block-column > h2, .wp-block-columns .wp-block-column > h3, .tgwf-search-form h1 {
  border-bottom: 2px solid var(--nv-text-color); }

.border-right {
  border-right: 2px solid var(--nv-text-color); }

.border-left {
  border-left: 2px solid var(--nv-text-color); }

/* Basic layout functions, widths etc */
.alignwide {
  width: 100%;
  max-width: 100%;
  margin-left: auto;
  margin-right: auto; }
  @media (min-width: 700px) {
    .alignwide {
      width: 100vw;
      max-width: 100vw;
      margin-left: calc( 50% - 50vw);
      margin-right: calc( 50% - 50vw);
      padding-left: 15px;
      padding-right: 15px; } }
  @media (min-width: 1170px) {
    .alignwide {
      width: 1170px;
      max-width: none;
      margin-left: calc( 50% - ( 1170px / 2 )); } }

/* Override Neve inline styles */
#content.neve-main .container .alignfull > [class*="__inner-container"],
#content.neve-main .container .alignwide > [class*="__inner-container"] {
  padding-left: 15px;
  padding-right: 15px; }
  @media (min-width: 960px) {
    #content.neve-main .container .alignfull > [class*="__inner-container"],
    #content.neve-main .container .alignwide > [class*="__inner-container"] {
      width: 100%;
      max-width: 100%;
      margin-left: auto; } }
  @media (min-width: 1170px) {
    #content.neve-main .container .alignfull > [class*="__inner-container"],
    #content.neve-main .container .alignwide > [class*="__inner-container"] {
      max-width: 1170px; } }

/**
 * Base layout styles.
 * These are largely going to be affected the outer most containers of each page.
*/
.entry-content > div[class*="wp-block-"] {
  margin-top: 2rem; }
  @media (min-width: 700px) {
    .entry-content > div[class*="wp-block-"] {
      margin-top: 3rem; } }
  .entry-content > div[class*="wp-block-"]:first-child {
    margin-top: 0; }
  .entry-content > div[class*="wp-block-"]:last-child {
    border: 0; }
  .entry-content > div[class*="wp-block-"] > div[class*="__inner-container"] {
    padding-top: 2rem; }
    @media (min-width: 700px) {
      .entry-content > div[class*="wp-block-"] > div[class*="__inner-container"] {
        padding-top: 3rem; } }
    .entry-content > div[class*="wp-block-"] > div[class*="__inner-container"] > h2:first-of-type,
    .entry-content > div[class*="wp-block-"] > div[class*="__inner-container"] > h3:first-of-type,
    .entry-content > div[class*="wp-block-"] > div[class*="__inner-container"] > h4:first-of-type {
      margin-top: 0; }

.entry-content > div[class*="has-background"] + div[class*="has-background"],
.entry-content > div.wp-block-cover + div[class*="has-background"] {
  margin-top: 0; }

.entry-content p + .wp-block-buttons, .entry-content ol + .wp-block-buttons, .entry-content ul + .wp-block-buttons {
  margin-top: 1.5rem; }

.entry-content > .wp-block-cover + p, .entry-content > .wp-block-cover + ol, .entry-content > .wp-block-cover + ul,
.entry-content > .wp-block-cover + figure,
.entry-content > .wp-block-group + p,
.entry-content > .wp-block-group + ol,
.entry-content > .wp-block-group + ul,
.entry-content > .wp-block-group + figure {
  margin-top: 2rem; }
  @media (min-width: 700px) {
    .entry-content > .wp-block-cover + p, .entry-content > .wp-block-cover + ol, .entry-content > .wp-block-cover + ul,
    .entry-content > .wp-block-cover + figure,
    .entry-content > .wp-block-group + p,
    .entry-content > .wp-block-group + ol,
    .entry-content > .wp-block-group + ul,
    .entry-content > .wp-block-group + figure {
      margin-top: 3rem; } }

.wp-block-buttons + h3 {
  margin-top: 2rem; }

h2 + h3 {
  margin-top: 1rem; }

/** Common styles in the Neve theme that we'd like to overwrite. */
.nv-index-posts,
.nv-single-page-wrap,
.nv-single-post-wrap {
  margin-top: 0;
  margin-bottom: 0; }

.nv-index-posts .nv-page-title-wrap,
.nv-page-title-wrap {
  margin-top: 2rem; }
  @media (min-width: 700px) {
    .nv-index-posts .nv-page-title-wrap,
    .nv-page-title-wrap {
      margin-top: 4rem; } }
  .nv-index-posts .nv-page-title-wrap.nv-big-title .nv-page-title,
  .nv-page-title-wrap.nv-big-title .nv-page-title {
    border-width: 0; }

.nv-content-wrap {
  margin-top: 2rem; }
  @media (min-width: 576px) {
    .nv-content-wrap {
      margin-top: 4rem; } }
  .nv-content-wrap > *:last-child {
    margin-bottom: 2rem; }
    @media (min-width: 576px) {
      .nv-content-wrap > *:last-child {
        margin-bottom: 3rem; } }

.nv-page-title-wrap + .nv-content-wrap {
  margin-top: 0; }

.nv-comment-content a,
.nv-content-wrap a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link),
.wp-block-post-content a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link),
.fellowship-post__content-widget-container a,
.nv-post-navigation a {
  color: var(--nv-text-color);
  text-decoration: none;
  background-image: linear-gradient(270deg, lime 30%, #145314 100%);
  background-repeat: repeat-x;
  background-size: 100% 2px;
  background-position: 0 95%; }
  .nv-comment-content a:hover,
  .nv-content-wrap a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover,
  .wp-block-post-content a:not(.button):not(.wp-block-file__button):not(.wp-block-button__link):hover,
  .fellowship-post__content-widget-container a:hover,
  .nv-post-navigation a:hover {
    color: white;
    background: var(--nv-text-color); }

/**
 * Icons styling.
 * Typically these are SVGs taken from IcoMoon.
*/
/* 1. GENERAL ICONS            */
/* 2. MENU ICONS                */
/* 1. GENERAL ICONS            */
/* 2. MENU ICONS                */
/**
 * Social icons styling and layout
*/
/**
 * Button styles.
*/
/**
 * Styling common across all navigations menus,
 * even if we have to target lots of CSS classes specifically.
*/
.nav-ul {
  font-family: "twkeverett", sans-serif; }
  .nav-ul li > .wrap {
    height: 100%; }

@media (min-width: 960px) {
  .nav-ul .sub-menu {
    width: 280px;
    left: 0;
    right: none;
    top: 85%; } }

.nav-ul .sub-menu li > a {
  justify-content: flex-start; }

.nav-ul .sub-menu li.menu-item a:hover {
  font-weight: 700; }

.nav-menu-primary li.menu-item a {
  text-decoration: none; }

.nav-menu-primary .wp-block-button__link.menu-item {
  background-color: var(--nv-primary-accent);
  border: 2px solid var(--nv-text-color);
  border-radius: 2rem;
  padding: 0.75rem 1rem; }
  .nav-menu-primary .wp-block-button__link.menu-item:hover {
    background-color: #34da34; }
  .nav-menu-primary .wp-block-button__link.menu-item a {
    color: var(--nv-text-color) !important;
    font-size: 1rem; }

/**
 * Styling and layout for the footer.
*/
.site-footer .footer-top-inner {
  padding-top: 2rem;
  padding-bottom: 2rem; }

.site-footer .footer-bottom-inner {
  padding-bottom: 2rem; }

.footer--row .footer--row-inner .container .row {
  align-items: flex-start; }

/**
 * Styling and layouts for post custom meta data
 * Eg dates, taxonomies, authors etc
*/
/* 1. GENERAL STYLING      */
/* 2. POST / FULL METADATA */
.meta a,
.excerpt-wrap a {
  color: black !important;
  text-decoration: none;
  background-image: linear-gradient(270deg, black 30%, black 100%);
  background-repeat: repeat-x;
  background-size: 100% 2px;
  background-position: 0 95%; }
  .meta a:hover,
  .excerpt-wrap a:hover {
    color: white !important;
    background: var(--nv-text-color); }

/**
 * Various grid layouts for use in all sorts of places.
*/
/**
 * Pagination styling
*/
ul.page-numbers {
  margin: 0 0 2rem; }
  @media (min-width: 700px) {
    ul.page-numbers {
      margin: 2rem 0 4rem; } }

.nv-index-posts a.page-numbers,
.nv-index-posts span.page-numbers {
  display: inline-block;
  padding: 0.5rem 0.75rem;
  background-color: var(--nv-text-color);
  color: white;
  font-weight: bold;
  border-radius: 0.5rem; }

.nv-index-posts span.page-numbers {
  background-color: var(--nv-light-bg);
  color: var(--nv-text-color); }

.nv-index-posts a.next, .nv-index-posts a.prev {
  background-color: var(--nv-text-color);
  color: var(--nv-site-bg); }

/**
 * General styling for forms
*/
form > * {
  margin-bottom: 1rem;
  height: 3rem; }

input[type="color"], input[type="date"],
input[type="datetime-local"], input[type="datetime"],
input[type="email"], input[type="month"],
input[type="number"], input[type="password"],
input[type="search"], input[type="tel"],
input[type="text"], input[type="time"],
input[type="url"], input[type="week"] {
  font-size: 1rem;
  width: 100%; }

textarea {
  font-size: 1rem;
  border: 0;
  background-color: transparent;
  border-radius: 0; }

::-moz-placeholder {
  color: var(--nv-text-color);
  opacity: 0.6; }

:-ms-input-placeholder {
  color: var(--nv-text-color);
  opacity: 0.6; }

::placeholder {
  color: var(--nv-text-color);
  opacity: 0.6; }

/* Summary highlight block */
.summary-highlight, .category .nv-page-title p {
  border-top: 2px solid var(--nv-text-color);
  border-bottom: 2px solid var(--nv-text-color);
  margin: 2rem 0;
  padding: 2rem 0 1rem; }
  @media (min-width: 700px) {
    .summary-highlight, .category .nv-page-title p {
      margin: 3rem 0;
      padding: 3rem 0; } }

/* Styling for widgets */
.widget > *:last-child {
  margin-bottom: 0; }

.widget_text + .widget_text {
  margin-top: -20px; }

/**
 * Custom clasess that can be applied to Gutenberg blocks.
*/
/* 1. GENERAL CLASSES     */
/* 2. COLOUR CLASSES      */
/* 1. GENERAL CLASSES     */
.alignfull {
  padding-right: 0;
  padding-left: 0; }

.alignfull > [class*="__inner-container"],
.alignwide > [class*="__inner-container"] {
  margin-left: auto;
  margin-right: auto; }

@media (min-width: 960px) {
  .alignfull > [class*="__inner-container"] {
    max-width: 70%; } }

/* 2. COLOUR CLASSES      */
/**
 * Customisations for the group block.
*/
/* 1. GENERAL BLOCK CUSTOMISATIONS */
/* 2. CUSTOM CLASSES               */
/* 1. GENERAL BLOCK CUSTOMISATIONS */
.entry-content > .wp-block-group:not(.no-border) {
  border-top: 2px solid var(--nv-text-color);
  border-bottom: 2px solid var(--nv-text-color); }

.wp-block-group.gradient-outline {
  background: linear-gradient(135deg, #eeeeee 0%, #c0c9bf 100%);
  padding: 0.25rem; }
  .wp-block-group.gradient-outline:nth-of-type(even) {
    background: linear-gradient(135deg, #c0c9bf 0%, #eeeeee 100%); }
  .wp-block-group.gradient-outline .wp-block-group__inner-container {
    background: white;
    padding: 1rem; }
    .wp-block-group.gradient-outline .wp-block-group__inner-container > h2:first-of-type, .wp-block-group.gradient-outline .wp-block-group__inner-container > h3:first-of-type, .wp-block-group.gradient-outline .wp-block-group__inner-container > h4:first-of-type {
      margin-top: 0; }

/**
 * Tweaks and changes for the default Gutenberg cover block.
 * In this site, we expect the block to be inside the group block.
*/
.wp-block-cover {
  border-bottom: solid 2px black; }
  .wp-block-cover.hide-image-on-mobile img {
    display: none; }
    @media (min-width: 700px) {
      .wp-block-cover.hide-image-on-mobile img {
        display: block; } }
  @media (max-width: 699.98px) {
    .wp-block-cover.hide-bg-on-mobile .wp-block-cover__background {
      background: none !important; } }

/**
 * Customsations to the columns layout
*/
.wp-block-columns .wp-block-column {
  margin-bottom: 2rem; }
  @media screen and (min-width: 782px) {
    .wp-block-columns .wp-block-column {
      border-right: 2px solid var(--nv-text-color);
      padding-right: 2rem; } }
  .wp-block-columns .wp-block-column:last-of-type {
    border: none; }
  .wp-block-columns .wp-block-column > *:first-child {
    margin-top: 0; }
  .wp-block-columns .wp-block-column > h2, .wp-block-columns .wp-block-column > h3 {
    text-transform: uppercase;
    width: 100%; }
  .wp-block-columns .wp-block-column p {
    padding: 1rem 0 0 0;
    margin: 0; }

.wp-block-columns.gwf-columns__title-para-button .wp-block-column > h2, .wp-block-columns.gwf-columns__title-para-button .wp-block-column > h3 {
  border: none; }

.wp-block-columns.gwf-columns__title-para-button .wp-block-column .wp-block-group {
  border-bottom: 2px solid black; }
  .wp-block-columns.gwf-columns__title-para-button .wp-block-column .wp-block-group > * > *:first-child {
    margin-top: 0;
    text-transform: uppercase; }

@media screen and (min-width: 782px) {
  .wp-block-columns.gwf-columns__title-para-button .wp-block-column {
    display: flex;
    flex-direction: column;
    justify-content: center; }
    .wp-block-columns.gwf-columns__title-para-button .wp-block-column .wp-block-group {
      min-height: 5.625rem; }
      .wp-block-columns.gwf-columns__title-para-button .wp-block-column .wp-block-group > * {
        display: flex;
        align-items: center;
        height: 100%;
        margin: 0 !important; }
    .wp-block-columns.gwf-columns__title-para-button .wp-block-column .wp-block-buttons {
      flex: 1 0 auto; } }

/**
 * Customisations for gutenberg button blocks.
*/
.wp-block-buttons {
  margin-top: 1rem;
  margin-bottom: 1rem; }

.wp-block-button__link {
  min-height: 3rem;
  border: 2px solid black !important; }
  .wp-block-button__link:hover {
    background-color: var(--nv-site-bg); }

/* Styling for the blockquote (quotes) block */
/* 1. BLOCKQUOTE     */
/* 2. PULLQUOTE      */
/* 1. BLOCKQUOTE     */
blockquote::after,
blockquote::before {
  display: none; }

blockquote.wp-block-quote {
  border-left: 4px solid #00FF00;
  font-weight: 700;
  padding-bottom: 1rem !important; }
  blockquote.wp-block-quote > * {
    padding: 1rem; }
  blockquote.wp-block-quote em {
    font-style: normal; }
  blockquote.wp-block-quote cite {
    font-family: "twkeverett", sans-serif;
    color: #4ADE4A;
    padding-top: 0;
    padding-bottom: 0; }
    blockquote.wp-block-quote cite::before {
      content: '- ';
      display: inline-block;
      width: 1em;
      height: 1rem;
      margin-right: 0.5rem; }
  blockquote.wp-block-quote.is-style-large {
    padding: 0; }
    @media (max-width: 699.98px) {
      blockquote.wp-block-quote.is-style-large p {
        font-size: 1.4rem; } }
    blockquote.wp-block-quote.is-style-large cite {
      text-align: left; }
    @media (min-width: 700px) {
      blockquote.wp-block-quote.is-style-large {
        padding-left: 1rem; } }
  blockquote.wp-block-quote.is-style-default p {
    font-size: 1.3em; }

/* 2. PULLQUOTE      */
.wp-block-pullquote {
  font-size: var(--wp--preset--font-size--medium);
  border-top-color: #00FF00;
  border-bottom-color: #00FF00;
  margin: 2rem 0; }
  @media (min-width: 700px) {
    .wp-block-pullquote {
      margin: 4rem 0; } }

/* 1. GENERAL             */
/* 2. QUESTION STYLING    */
/* 3. ANSWER STYLING      */
.schema-faq-section {
  position: relative; }
  .schema-faq-section:hover {
    cursor: pointer; }
  .schema-faq-section:before {
    display: block;
    content: '';
    width: 100%;
    height: 1px;
    margin: 1rem 0;
    background-color: var(--nv-primary-accent); }
    @media (min-width: 700px) {
      .schema-faq-section:before {
        margin: 2rem 0; } }
    .block-editor-block-list__block .schema-faq-section:before {
      background-color: transparent;
      margin-top: 0; }
  .schema-faq-section:last-of-type {
    padding-bottom: 1rem;
    margin-bottom: 1rem;
    border-bottom: 1px solid var(--nv-primary-accent); }
    @media (min-width: 700px) {
      .schema-faq-section:last-of-type {
        padding-bottom: 2rem;
        margin-bottom: 2rem; } }

/* 2. QUESTION STYLING    */
.schema-faq-question {
  display: block;
  padding-right: 2.2rem;
  margin-bottom: 0.6rem;
  font-family: "twkeverett", sans-serif;
  line-height: 1.3; }
  .schema-faq-question:not(.block-editor-rich-text__editable):after {
    content: '';
    position: absolute;
    top: 1.3rem;
    right: 0;
    height: 30px;
    width: 30px;
    transform: rotate(0deg);
    transition: transform 0.3s linear;
    background-image: url("../img/caret-down.svg");
    background-size: 30px 30px;
    background-repeat: no-repeat;
    background-position: center center; }
    @media (min-width: 700px) {
      .schema-faq-question:not(.block-editor-rich-text__editable):after {
        top: 2.3rem; } }
  .is-open .schema-faq-question:not(.block-editor-rich-text__editable)::after {
    transform: rotate(180deg); }

/* 3. ANSWER STYLING    */
.schema-faq-answer:not(.block-editor-rich-text__editable) {
  display: none;
  margin: 1rem 0; }
  .is-open .schema-faq-answer:not(.block-editor-rich-text__editable) {
    display: block; }

.schema-faq-answer.block-editor-rich-text__editable {
  margin-bottom: 2rem !important; }

.schema-faq-section:last-of-type .schema-faq-answer:not(.block-editor-rich-text__editable) {
  margin-bottom: 0; }

.wp-block-latest-posts__featured-image {
  width: 100%; }
  .wp-block-latest-posts__featured-image > a {
    display: block; }
  .wp-block-latest-posts__featured-image img {
    width: 100%; }

.wp-block-latest-posts__post-title {
  font-size: 1.6rem;
  line-height: 1.4; }

/* Styles for default embed block, eg for videos */
.wp-block-embed {
  margin: 2rem 0; }
  @media (min-width: 700px) {
    .wp-block-embed {
      margin: 4rem 0; } }

/* CSS classes relating to block patterns we've created */
.wp-block-cover.pattern__text-gradient-image {
  background: linear-gradient(40deg, #0066ff 50%, #0066ff 80%, white 95%);
  min-height: unset;
  border-top: 2px solid black;
  border-bottom: 2px solid black; }
  .wp-block-cover.pattern__text-gradient-image > .wp-block-cover__image-background {
    width: 100%;
    left: 0;
    right: 0; }
    @media (min-width: 700px) {
      .wp-block-cover.pattern__text-gradient-image > .wp-block-cover__image-background {
        max-width: 1140px;
        -o-object-position: right center;
           object-position: right center;
        margin: 0 auto; } }
  .wp-block-cover.pattern__text-gradient-image .wp-block-cover__inner-container:first-of-type {
    position: relative; }
    .wp-block-cover.pattern__text-gradient-image .wp-block-cover__inner-container:first-of-type::after {
      position: absolute;
      top: 0;
      z-index: -1;
      height: 100%;
      width: calc( 100% - 30px);
      display: block;
      content: '';
      background-image: url("../img/gradients/gradient-bg__blue-blur.png");
      background-size: 100% 100%;
      background-repeat: no-repeat; }
    .wp-block-cover.pattern__text-gradient-image .wp-block-cover__inner-container:first-of-type > .wp-block-group {
      margin-bottom: 3rem; }
      @media (min-width: 700px) {
        .wp-block-cover.pattern__text-gradient-image .wp-block-cover__inner-container:first-of-type > .wp-block-group {
          padding-right: 2rem;
          padding-left: 2rem; } }
      @media (min-width: 1170px) {
        .wp-block-cover.pattern__text-gradient-image .wp-block-cover__inner-container:first-of-type > .wp-block-group {
          border-left: 2px solid black;
          border-right: 2px solid black; } }
      .wp-block-cover.pattern__text-gradient-image .wp-block-cover__inner-container:first-of-type > .wp-block-group .wp-block-group__inner-container {
        max-width: 500px; }
        .wp-block-cover.pattern__text-gradient-image .wp-block-cover__inner-container:first-of-type > .wp-block-group .wp-block-group__inner-container > *:first-child {
          padding-top: 2rem; }
        .wp-block-cover.pattern__text-gradient-image .wp-block-cover__inner-container:first-of-type > .wp-block-group .wp-block-group__inner-container > *:last-child {
          padding-bottom: 2rem; }

/* Apply own brand customisations to checker-plugin */
body.green-web-check .nv-single-page-wrap {
  max-width: 100% !important; }

body.green-web-check .nv-content-wrap {
  margin-top: 0; }
  body.green-web-check .nv-content-wrap > *:last-child {
    margin-bottom: 0; }

.tgwf-result__wrapper .wp-block-cover__inner-container {
  color: var(--nv-text-color);
  padding-left: 15px;
  padding-right: 15px; }

.tgwf-result__page-title {
  border-bottom: 2px solid var(--nv-text-color); }
  .tgwf-result__page-title h1 {
    font-size: var(--wp--preset--font-size--medium);
    margin-bottom: 1rem;
    font-weight: normal;
    letter-spacing: 1px; }

.tgwf-result__result {
  border-bottom: 2px solid var(--nv-text-color); }
  .tgwf-result__result span {
    display: block; }

.tgwf-result__result {
  letter-spacing: 1px;
  margin-bottom: 0; }
  .tgwf-result__result > * {
    margin-bottom: 1rem;
    line-height: 1.3;
    font-size: var(--wp--preset--font-size--large); }
    @media (min-width: 700px) {
      .tgwf-result__result > * {
        font-size: var(--wp--preset--font-size--x-large); }
        .tgwf-result__result > *:last-child {
          margin-bottom: 2rem; } }

.tgwf-result__text--feedback,
.tgwf-result__text--hosting-outcome {
  text-transform: uppercase; }

.tgwf-search-form {
  margin-top: 2rem; }
  .tgwf-search-form p, .tgwf-search-form input {
    font-size: 1.25rem; }
  .tgwf-search-form input.form-control {
    flex-grow: 1; }
  @media (min-width: 960px) {
    .tgwf-search-form__button {
      max-width: 280px; } }

.tgwf-image {
  max-width: 200px; }
  @media (min-width: 960px) {
    .tgwf-image {
      max-width: none; } }

.gwf-check-again__text {
  max-width: 789px;
  margin: auto; }

.gwf-check-again .wp-block-cover__inner-container::after {
  max-width: 789px;
  left: 50%;
  transform: translate(-50%, 0); }

/**
 * Styling / layout for the header
*/
.hfg_header .nv-navbar {
  border-bottom: 2px solid var(--nv-text-color); }

.hfg_header .header-bottom-inner {
  background-color: var(--nv-primary-accent) !important;
  border-bottom: 2px solid var(--nv-text-color); }

/**
 * Styling and layout overrides specifically for the main menu.
 * Where possible we want this main menu to use default nav styles,
 * so these styles are only specific to the main and applied nowhere else.
*/
/* 1. GENERAL STYLES     */
/* 2. PRIMARY MENU       */
/* 3. MOBILE MENU        */
/* 1. GENERAL STYLES     */
/* 2. PRIMARY MENU       */
/* 3. MOBILE MENU        */
/**
 * Styling and layout overrides specifically for the main menu.
 * Where possible we want this main menu to use default nav styles,
 * so these styles are only specific to the main and applied nowhere else.
*/
/**
 * Styling and classes for featured images.
*/
/* Layout and styling for page template in general. */
@media (min-width: 960px) {
  .nv-single-page-wrap {
    max-width: 70% !important; } }

/**
 * SCSS targetting posts of all types.
*/
/* 1. POST GENERAL            */
/* 2. POST CTA                */
/* 3. POST TEASER             */
/* 4. POST ARCHIVE            */
/* 1. POST GENERAL            */
.single-post article .entry-content {
  font-size: 1.1rem; }

.blog-entry-title {
  text-transform: none; }

.nv-post-navigation {
  border-top: 2px solid var(--nv-text-color);
  border-bottom: 2px solid var(--nv-text-color);
  margin: 2rem 0;
  padding: 2rem 0; }
  @media (min-width: 700px) {
    .nv-post-navigation {
      margin: 3rem 0;
      padding: 3rem 0; } }

.nv-related-posts .entry-title {
  font-size: 1.4rem;
  margin-top: 1.5rem; }

.nv-related-posts .posts-wrapper .related-post .content {
  border: 0; }

/* 2. POST CTA                */
/* 3. POST TEASER             */
/* 4. POST ARCHIVE            */
.posts-wrapper {
  margin-bottom: 1rem; }
  @media (min-width: 700px) {
    .posts-wrapper {
      margin: 2rem 0; } }

.blog-categories-list > * {
  margin-right: 0.5rem;
  margin-bottom: 1rem; }
  .blog-categories-list > *:last-child {
    margin-right: 0; }
  @media (min-width: 700px) {
    .blog-categories-list > * {
      margin-right: 1rem; } }

.blog-categories-list .wp-block-button__link {
  background-color: var(--nv-text-color);
  color: var(--nv-site-bg);
  min-height: unset;
  border: 0;
  padding: 0.375rem 0.5rem; }
  @media (min-width: 700px) {
    .blog-categories-list .wp-block-button__link {
      padding: 0.5rem 1rem; } }

.article-content-col .content {
  border-bottom: 2px solid var(--nv-text-color);
  padding: 2rem 0; }
  @media (min-width: 700px) {
    .article-content-col .content {
      padding: 3rem 0; } }

/* Styling for the category archive pages. */
.category .nv-page-title-wrap.nv-big-title .nv-page-title h1 + p {
  margin-bottom: 2rem; }
  @media (min-width: 700px) {
    .category .nv-page-title-wrap.nv-big-title .nv-page-title h1 + p {
      margin-bottom: 3rem; } }

/**
 * Customisations for the homepage only.
*/
/* 1. HOMEPAGE NAV STYLES          */
/* 2. wp-block-group__home CLASS   */
/* 3. OTHER STYLING                */
.home .entry-content {
  margin-top: 0; }

.fellowship-post__header {
  position: relative;
  margin-top: 2rem;
  margin-bottom: 2rem; }
  @media (min-width: 700px) {
    .fellowship-post__header {
      margin-top: 3rem;
      margin-bottom: 3rem; } }

.fellowship-post__category {
  background-color: var(--nv-c-2);
  font-weight: 700;
  display: inline-block;
  padding: 0.3rem 0.8rem;
  position: absolute;
  margin-top: -1rem;
  margin-left: 1rem;
  text-transform: uppercase; }
  @media (min-width: 700px) {
    .fellowship-post__category {
      margin-left: 2rem; } }
  .fellowship-post__category:hover {
    background-color: var(--nv-text-color); }
  .fellowship-post__category a {
    color: var(--nv-text-color);
    background: none; }

.fellowship-post__content-widget-container {
  background-color: #FEFBE2;
  border: 2px solid var(--nv-text-color); }
  .fellowship-post__content-widget-container > * > * {
    padding-right: 1rem;
    padding-left: 1rem; }
    @media (min-width: 700px) {
      .fellowship-post__content-widget-container > * > * {
        padding-left: 2rem;
        padding-right: 2rem; } }
    .fellowship-post__header .fellowship-post__content-widget-container > * > *:first-child {
      margin-top: 1rem; }
    .fellowship-post__content-widget-container > * > *:last-child {
      padding-bottom: 0;
      margin-bottom: 0; }
  .fellowship-post__content-widget-container h1, .fellowship-post__content-widget-container h2, .fellowship-post__content-widget-container h3, .fellowship-post__content-widget-container h4, .fellowship-post__content-widget-container h5 {
    margin-top: 0;
    text-transform: uppercase; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
