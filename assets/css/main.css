/**
 * Main SCSS file loading in all the partials needed.
*/
/**
* Sass function and mixin to use rem units with optional pixel fallback.
* Author: Pierre Burel
* Source: https://github.com/pierreburel/sass-rem
*/
/**
 * Colour variables.
*/
/**
 * Variables for use throughout the rest of the SASS partials.
*/
/* Font definitions */
@font-face {
  font-family: 'miso';
  src: url("../fonts/miso/miso-webfont.woff2") format("woff2"), url("../fonts/miso/miso-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'caveatreg';
  src: url("../fonts/caveat/caveat-regular-webfont.woff2") format("woff2"), url("../fonts/caveat/caveat-regular-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

/**
 * Default typography styles and variables.
 * Overrides of key TwentyTwenty typography styles.
*/
/* Default typography styles and variables */
/**
 * Styling overrides for basic HTML elements.
*/
h1, h2, h3, h4, h5, h6 {
  font-family: "miso", sans-serif; }
  h1 > a, h2 > a, h3 > a, h4 > a, h5 > a, h6 > a {
    text-decoration: none; }
    h1 > a:hover, h2 > a:hover, h3 > a:hover, h4 > a:hover, h5 > a:hover, h6 > a:hover {
      text-decoration: underline; }

h2 {
  margin-top: 1.875rem; }
  @media (min-width: 700px) {
    h2 {
      margin-top: 3.75rem; } }

h3 {
  margin-top: 1.875rem; }
  @media (min-width: 700px) {
    h3 {
      margin-top: 3.75rem; } }

h4 {
  margin-top: 1.3rem; }
  @media (min-width: 700px) {
    h4 {
      margin-top: 1.5rem; } }

a:link, a:hover {
  text-decoration: underline; }
  a:link:hover, a:hover:hover {
    text-decoration: none; }

/* Useful classes that can be reused in all sorts of great places */
/**
 * Base layout styles.
 * These are largely going to be affected the outer most containers of each page.
*/
.wp-block-buttons + h3 {
  margin-top: 1.875rem; }

h2 + h3 {
  margin-top: 1rem; }

/** Common styles in the Neve theme that we'd like to overwrite. */
.nv-page-title-wrap.nv-big-title .nv-page-title {
  border-width: 0; }

.nv-content-wrap {
  margin-top: 0.9375rem; }
  @media (min-width: 576px) {
    .nv-content-wrap {
      margin-top: 30px; } }

.nv-page-title-wrap + .nv-content-wrap {
  margin-top: 0; }

/**
 * Icons styling.
 * Typically these are SVGs taken from IcoMoon.
*/
/* 1. GENERAL ICONS            */
/* 2. MENU ICONS                */
/* 1. GENERAL ICONS            */
/* 2. MENU ICONS                */
/**
 * Social icons styling and layout
*/
/**
 * Button styles.
*/
/**
 * Styling common across all navigations menus,
 * even if we have to target lots of CSS classes specifically.
*/
.nav-ul .sub-menu li > a {
  justify-content: flex-start; }

.nav-menu-primary li.menu-item a {
  text-decoration: none; }

.nav-menu-primary .wp-block-button__link.menu-item {
  border-radius: 4px;
  padding: 6px 0.9375rem; }
  .nav-menu-primary .wp-block-button__link.menu-item:hover {
    background-color: #4e7926; }
  .nav-menu-primary .wp-block-button__link.menu-item a {
    color: white !important;
    font-size: 1rem;
    font-weight: 700; }

/**
 * Styling and layout for the footer.
*/
.site-footer .footer-top-inner {
  padding-top: 1.875rem;
  padding-bottom: 1.875rem; }

.site-footer .footer-bottom-inner {
  padding-bottom: 1.875rem; }

.footer--row .footer--row-inner .container .row {
  align-items: flex-start; }

/**
 * Styling and layouts for post custom meta data
 * Eg dates, taxonomies, authors etc
*/
/* 1. GENERAL STYLING      */
/* 2. POST / FULL METADATA */
/**
 * Various grid layouts for use in all sorts of places.
*/
/**
 * Pagination styling
*/
/**
 * General styling for forms
*/
/* Summary highlight block */
.summary-highlight, .category .nv-page-title p {
  border-top: 1px solid #F4F3F2;
  border-bottom: 1px solid #F4F3F2;
  margin: 0.9375rem 0 1.875rem;
  padding: 0.9375rem 0; }
  @media (min-width: 700px) {
    .summary-highlight, .category .nv-page-title p {
      margin: 1.875rem 0 3.75rem;
      padding: 1.875rem 0; } }

/* Styling for widgets */
.widget > *:last-child {
  margin-bottom: 0; }

.widget_text + .widget_text {
  margin-top: -20px; }

/**
 * Custom clasess that can be applied to Gutenberg blocks.
*/
/* 1. GENERAL CLASSES     */
/* 2. COLOUR CLASSES      */
/* 1. GENERAL CLASSES     */
.alignfull > [class*="__inner-container"],
.alignwide > [class*="__inner-container"] {
  margin: auto; }

@media (min-width: 1000px) {
  .alignfull > [class*="__inner-container"] {
    max-width: 70%; } }

.has-background div[class*="__inner-container"] {
  padding: 1.875rem 0;
  margin-top: 3.75rem;
  margin-bottom: 3.75rem; }

/* 2. COLOUR CLASSES      */
/**
 * Customisations for the group block.
*/
/* 1. GENERAL BLOCK CUSTOMISATIONS */
/* 2. CUSTOM CLASSES               */
/* 1. GENERAL BLOCK CUSTOMISATIONS */
.wp-block-group:not(.has-background) {
  margin-top: 1.875rem; }
  @media (min-width: 700px) {
    .wp-block-group:not(.has-background) {
      margin-top: 3.75rem; } }

.wp-block-group .wp-block-group__inner-container > h2:first-of-type, .wp-block-group .wp-block-group__inner-container h3:first-of-type, .wp-block-group .wp-block-group__inner-container h4:first-of-type {
  margin-top: 1rem; }

.wp-block-group.gradient-outline {
  background: linear-gradient(135deg, #eeeeee 0%, #c0c9bf 100%);
  padding: 0.25rem; }
  .wp-block-group.gradient-outline:nth-of-type(even) {
    background: linear-gradient(135deg, #c0c9bf 0%, #eeeeee 100%); }
  .wp-block-group.gradient-outline .wp-block-group__inner-container {
    background: white;
    padding: 1rem; }
    .wp-block-group.gradient-outline .wp-block-group__inner-container > h2:first-of-type, .wp-block-group.gradient-outline .wp-block-group__inner-container h3:first-of-type, .wp-block-group.gradient-outline .wp-block-group__inner-container h4:first-of-type {
      margin-top: 0; }

/**
 * Tweaks and changes for the default Gutenberg cover block.
 * In this site, we expect the block to be inside the group block.
*/
.wp-block-cover.hide-image-on-mobile img {
  display: none; }
  @media (min-width: 700px) {
    .wp-block-cover.hide-image-on-mobile img {
      display: block; } }

/**
 * Customsations to the columns layout
*/
.wp-block-columns .wp-block-column > h3:first-of-type {
  margin-top: 1rem; }

/**
 * Customisations for gutenberg button blocks.
*/
.wp-block-button__link {
  background-color: var(--nv-c-2); }

.wp-block-button.is-style-outline .wp-block-button__link {
  color: var(--nv-c-2);
  border-color: var(--nv-c-2); }

/* Styling for the blockquote (quotes) block */
blockquote::after,
blockquote::before {
  display: none; }

blockquote.wp-block-quote {
  border-left: 4px solid #65B54C;
  font-family: "caveatreg", cursive;
  font-weight: 700; }
  blockquote.wp-block-quote > * {
    padding: 1rem; }
  blockquote.wp-block-quote p:first-of-type {
    padding-top: 0; }
  blockquote.wp-block-quote cite {
    font-family: "Lato", sans-serif;
    color: #5A8C2C;
    padding-top: 0;
    padding-bottom: 0; }
    blockquote.wp-block-quote cite::before {
      content: '- ';
      display: inline-block;
      width: 1em;
      height: 1rem; }
  blockquote.wp-block-quote.is-style-large {
    padding: 0;
    margin-bottom: 40px; }
    @media (max-width: 699.98px) {
      blockquote.wp-block-quote.is-style-large p {
        font-size: 1.4rem; } }
    blockquote.wp-block-quote.is-style-large cite {
      text-align: left; }
    @media (min-width: 700px) {
      blockquote.wp-block-quote.is-style-large {
        padding-left: 1rem; } }
  blockquote.wp-block-quote.is-style-default p {
    font-size: 1.3em; }

.home .tgwf-search-form__wrapper {
  color: white; }

/**
 * Styling / layout for the header
*/
.hfg_header .header-bottom-inner {
  background-color: #17260B !important; }
  .hfg_header .header-bottom-inner .brand {
    font-size: 1.2em;
    font-weight: bold; }

/**
 * Styling and layout overrides specifically for the main menu.
 * Where possible we want this main menu to use default nav styles,
 * so these styles are only specific to the main and applied nowhere else.
*/
/* 1. GENERAL STYLES     */
/* 2. PRIMARY MENU       */
/* 3. MOBILE MENU        */
/* 1. GENERAL STYLES     */
/* 2. PRIMARY MENU       */
/* 3. MOBILE MENU        */
/**
 * Styling and layout overrides specifically for the main menu.
 * Where possible we want this main menu to use default nav styles,
 * so these styles are only specific to the main and applied nowhere else.
*/
/**
 * Styling and classes for featured images.
*/
/**
 * SCSS targetting posts of all types.
*/
/* 1. POST GENERAL            */
/* 2. POST CTA                */
/* 3. POST TEASER             */
/* 4. POST ARCHIVE            */
/* 1. POST GENERAL            */
.single-post article .entry-content {
  font-size: 1.1rem; }

/* 2. POST CTA                */
/* 3. POST TEASER             */
/* 4. POST ARCHIVE            */
.blog-categories-list > * {
  margin-right: 0.9375rem;
  margin-bottom: 0.9375rem; }
  .blog-categories-list > *:last-child {
    margin-right: 0; }

/* Styling for the category archive pages. */
.category .nv-page-title-wrap.nv-big-title .nv-page-title h1 + p {
  margin-bottom: 1.875rem; }
  @media (min-width: 700px) {
    .category .nv-page-title-wrap.nv-big-title .nv-page-title h1 + p {
      margin-bottom: 3.75rem; } }

/**
 * Customisations for the homepage only.
*/
/* 1. HOMEPAGE NAV STYLES          */
/* 2. wp-block-group__home CLASS   */
/* 3. OTHER STYLING                */
.fellowship-post__header {
  position: relative; }

.fellowship-post__category {
  background-color: var(--nv-c-2);
  font-weight: 700;
  display: inline-block;
  padding: 0.3rem 0.8rem;
  position: absolute;
  margin-top: -1rem;
  margin-left: 1rem; }
  @media (min-width: 700px) {
    .fellowship-post__category {
      margin-left: 2rem; } }
  .fellowship-post__category:hover {
    background-color: #5A8C2C; }
  .fellowship-post__category a {
    color: white;
    text-decoration: none; }

.fellowship-post__content-widget-container {
  background-color: #FFEB99;
  font-family: "caveatreg", cursive;
  font-size: 1.4em; }
  .fellowship-post__content-widget-container > * > * {
    padding-right: 1rem;
    padding-left: 1rem; }
    @media (min-width: 700px) {
      .fellowship-post__content-widget-container > * > * {
        padding-left: 2rem;
        padding-right: 2rem; } }
    .fellowship-post__header .fellowship-post__content-widget-container > * > *:first-child {
      margin-top: 1rem; }
    .fellowship-post__content-widget-container > * > *:last-child {
      padding-bottom: 0;
      margin-bottom: 0; }
  .fellowship-post__content-widget-container h1, .fellowship-post__content-widget-container h2, .fellowship-post__content-widget-container h3, .fellowship-post__content-widget-container h4, .fellowship-post__content-widget-container h5 {
    font-family: "caveatreg", cursive; }
  .fellowship-post__content-widget-container a {
    color: #476F22; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
