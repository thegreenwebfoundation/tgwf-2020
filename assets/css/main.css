/**
 * Main SCSS file loading in all the partials needed.
*/
/**
* Sass function and mixin to use rem units with optional pixel fallback.
* Author: Pierre Burel
* Source: https://github.com/pierreburel/sass-rem
*/
/**
 * Colour variables.
*/
/**
 * Variables for use throughout the rest of the SASS partials.
*/
/* Font definitions */
@font-face {
  font-family: 'nexa_boldregular';
  src: url("../fonts/nexa_bold-webfont.woff2") format("woff2"), url("../fonts/nexa_bold-webfont.woff") format("woff");
  font-weight: bold;
  font-style: normal; }

@font-face {
  font-family: 'nexa_lightregular';
  src: url("../fonts/nexa_light-webfont.woff2") format("woff2"), url("../fonts/nexa_light-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

/**
 * Default typography styles and variables.
 * Overrides of key TwentyTwenty typography styles.
*/
/* Default typography styles and variables */
/**
 * Styling overrides for basic HTML elements.
*/
body {
  font-family: "nexa_lightregular";
  font-weight: 300;
  color: #000000; }

h1, h2, h3, h4, h5, h6 {
  font-family: "nexa_boldregular";
  font-weight: 700; }
  h1 > a, h2 > a, h3 > a, h4 > a, h5 > a, h6 > a {
    text-decoration: none; }
    h1 > a:hover, h2 > a:hover, h3 > a:hover, h4 > a:hover, h5 > a:hover, h6 > a:hover {
      text-decoration: underline; }

a:link, a:hover {
  text-decoration: underline; }
  a:link:hover, a:hover:hover {
    text-decoration: none; }

/* Useful classes that can be reused in all sorts of great places */
.full-width, .alignfull {
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw; }

/**
 * Base layout styles.
 * These are largely going to be affected the outer most containers of each page.
*/
/** Common styles in the Neve theme that we'd like to overwrite. */
.nv-page-title-wrap.nv-big-title .nv-page-title {
  border-width: 0; }

/**
 * Icons styling.
 * Typically these are SVGs taken from IcoMoon.
*/
/* 1. GENERAL ICONS            */
/* 2. MENU ICONS                */
/* 3. GUTENBERG CLASS ICONS     */
/* 1. GENERAL ICONS            */
/* 2. MENU ICONS                */
@media (max-width: 960px) {
  .icon-menu a::before {
    content: '';
    display: block;
    width: 30px;
    height: 30px;
    background-repeat: no-repeat;
    background-size: contain;
    margin-right: 0.9375rem; } }

/**
 * Social icons styling and layout
*/
/**
 * Button styles.
*/
.button.button-primary, button, .btn,
input[type="button"], input[type="submit"],
ul[id^="nv-primary-navigation"] li.button.button-primary > a,
.menu li.button.button-primary > a, .wp-block-button.is-style-primary .wp-block-button__link {
  background-color: #11406D; }
  .button.button-primary:hover, button:hover, .btn:hover,
  input[type="button"]:hover, input[type="submit"]:hover,
  ul[id^="nv-primary-navigation"] li.button.button-primary > a:hover,
  .menu li.button.button-primary > a:hover, .wp-block-button.is-style-primary .wp-block-button__link:hover {
    background-color: #D94640; }

/**
 * Styling common across all navigations menus,
 * even if we have to target lots of CSS classes specifically.
*/
.menu-item {
  font-family: "nexa_boldregular"; }
  .menu-item a {
    text-decoration: none; }

.current-menu-item:hover, .current-menu-item a:hover {
  color: #D94640 !important; }

/**
 * Styling and layout for the footer.
*/
.footer-bottom-inner {
  padding: 1.875rem 0; }

.site-footer .widget_media_image img {
  max-width: 300px !important; }

@media (max-width: 999.98px) {
  .footer--row .hfg-item-left {
    padding-left: 3.75rem; }
  .footer--row .hfg-item-right {
    padding-right: 3.75rem; } }

@media (max-width: 575.98px) {
  .footer--row .hfg-item-left {
    padding-left: 1.875rem; }
  .footer--row .hfg-item-right {
    padding-right: 1.875rem; } }

/**
 * Styling and layouts for post custom meta data
 * Eg dates, taxonomies, authors etc
*/
/* 1. GENERAL STYLING      */
/* 2. POST / FULL METADATA */
/* 3. VOL OPP METADATA     */
/**
 * Various grid layouts for use in all sorts of places.
*/
/**
 * Pagination styling
*/
/**
 * General styling for forms
*/
/**
 * Some of the page templates are using some hardcoded reusable blocks.
 * We may need to add some custom classes to make them good, here's where we put that code.
 */
.reusable-blocks > div {
  max-width: none !important;
  margin-left: -50vw !important; }

/**
 * Custom clasess that can be applied to Gutenberg blocks.
*/
/* 1. GENERAL CLASSES     */
/* 2. COLOUR CLASSES      */
/* 1. GENERAL CLASSES     */
@media (min-width: 1000px) {
  .container-width-on-desktop {
    width: 100%;
    margin: auto;
    position: static; } }

/* 2. COLOUR CLASSES      */
.block-bg__light-grey {
  background-color: #F2F2F2;
  height: 130px;
  width: 130px;
  border-radius: 100px;
  margin: 0 auto 10px; }
  .block-bg__light-grey figure {
    display: flex !important;
    justify-content: center;
    align-items: center;
    height: 100%; }
  .block-bg__light-grey img {
    height: 80px;
    width: 80px; }

.block-border__light_grey {
  border: 2px solid #F2F2F2; }

/**
 * Customisations for the group block.
*/
/* 1. GENERAL BLOCK CUSTOMISATIONS */
/* 2. CUSTOM CLASSES               */
/**
 * Tweaks and changes for the default Gutenberg cover block.
 * In this site, we expect the block to be inside the group block.
*/
/**
 * Customsations to the columns layout
*/
.v24-block-columns__icons img {
  height: 50px; }

.v24-block-columns__little-images--with-border {
  border: 2px solid #F2F2F2;
  padding: 0.9375rem 0;
  justify-content: center;
  max-width: 700px;
  margin: auto; }
  .v24-block-columns__little-images--with-border .wp-block-column {
    max-width: 200px;
    flex-basis: 0; }
  .v24-block-columns__little-images--with-border .wp-block-image {
    margin-bottom: 0; }

/**
 * Customisations for gutenberg button blocks.
*/
/* 1. CUSTOM CLASSES    */
/* Styling and layout changes for the search and filter pro plugin */
.searchandfilter ul {
  display: flex; }
  .searchandfilter ul li {
    display: inline-block;
    padding: 0; }

.sf-field-submit {
  margin-left: 0.625rem !important; }
  .sf-field-submit input[type="submit"] {
    background-color: transparent;
    background-image: url("../images/icons/icon-search.svg");
    background-repeat: no-repeat;
    background-position: center center;
    background-size: 20px;
    padding: 0.625rem; }

/**
 * Styling / layout for the header
*/
.hfg_header.site-header {
  box-shadow: none; }

.header-main-inner {
  padding: 0.625rem 0; }
  @media (min-width: 960px) {
    .header-main-inner {
      padding: 1.875rem 0; } }

.site-logo img {
  width: 100%;
  max-width: none; }

/* Mobile menu icon */
.builder-item--nav-icon .navbar-toggle {
  padding-right: 0; }

.icon-bar {
  width: 25px;
  height: 3px; }

.icon-bar:nth-child(2) {
  margin: 5px 0; }

.is-menu-sidebar .navbar-toggle .icon-bar:nth-child(1) {
  top: 11px; }

/* Accent box - red box with left hand triangle */
.header__accent-box {
  display: inline-block;
  height: 0;
  border-style: solid;
  border-width: 0 0px 81px 50px;
  border-color: transparent transparent #D94640; }

.header__accent-box--inner {
  display: inline-block;
  background-color: #D94640;
  color: white;
  font-family: "nexa_boldregular";
  padding: 0.9375rem 1.875rem 0.9375rem 0; }

/**
 * Styling and layout overrides specifically for the main menu.
 * Where possible we want this main menu to use default nav styles,
 * so these styles are only specific to the main and applied nowhere else.
*/
/* 1. GENERAL STYLES     */
@media screen and (min-width: 960px) {
  .hide-on-desktop {
    display: none !important; } }

/* 1. PRIMARY MENU       */
@media (min-width: 960px) {
  .header--row .hfg-item-right .builder-item--primary-menu .primary-menu-ul > li {
    margin-left: 3.75rem !important; }
    .header--row .hfg-item-right .builder-item--primary-menu .primary-menu-ul > li:first-of-type, .header--row .hfg-item-right .builder-item--primary-menu .primary-menu-ul > li:nth-of-type(2) {
      margin-left: 0 !important; } }

/* 3. MOBILE MENU        */
#nv-primary-navigation-sidebar.primary-menu-ul a {
  font-size: 24px !important;
  margin-bottom: 1.875rem; }

#nv-primary-navigation-sidebar .icon-home a::before {
  background-image: url("../images/icons/icon-home.svg"); }

#nv-primary-navigation-sidebar .icon-plane a::before {
  background-image: url("../images/icons/icon-plane-lift-off.svg"); }

#nv-primary-navigation-sidebar .icon-folder a::before {
  background-image: url("../images/icons/icon-folder.svg"); }

#nv-primary-navigation-sidebar .icon-chat a::before {
  background-image: url("../images/icons/icon-chat-bubble.svg"); }

/**
 * Styling and layout overrides specifically for the main menu.
 * Where possible we want this main menu to use default nav styles,
 * so these styles are only specific to the main and applied nowhere else.
*/
/**
 * Styling and classes for featured images.
*/
/**
 * SCSS targetting posts of all types.
*/
/* 1. POST GENERAL       */
/* 2. POST CTA           */
/* 3. POST TEASER        */
/* 4. POST ARCHIVE       */
/*
* Appears on the medif download page and lists all the categories (which are letters).
*/
.alphabet-menu {
  padding-bottom: 1.875rem;
  margin-right: 1.875rem;
  margin-bottom: -0.625rem;
  display: inline-block; }
  @media (min-width: 700px) {
    .alphabet-menu {
      padding-bottom: 0; } }

.alphabet-menu__char {
  display: inline-block;
  padding: 0 0.625rem 0.625rem 0; }
  @media (min-width: 1000px) {
    .alphabet-menu__char {
      padding-bottom: 0; } }
  .alphabet-menu__char a {
    border-bottom: 1px solid #000000;
    line-height: 1.2;
    color: #000000; }
    .alphabet-menu__char a:focus, .alphabet-menu__char a:hover {
      border-bottom: 2px solid currentColor;
      text-decoration: none;
      color: #D94640; }

/*
* Relates to template-parts/partials/airline-teaser.php
*/
.airline__teasers {
  margin-bottom: 3.75rem; }

.airline__teaser {
  padding: 0.9375rem;
  margin: 15px 0;
  display: flex; }
  .airline__teaser:nth-of-type(odd) {
    background-color: #F2F2F2; }

.airline__teaser--image {
  width: 140px;
  background-color: #FFFFFF;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 5px; }

.airline__teaser--details {
  margin-left: 1.875rem; }

.airline__teaser--doclink {
  font-weight: 700; }

/**
 * Customisations for the homepage only.
*/
/* 1. HOMEPAGE NAV STYLES          */
/* 2. wp-block-group__home CLASS   */
/* 3. OTHER STYLING                */
/** 
 * Styling relating to the medif downloads page.
 * This page is the archive page for the CPT 'airline' as well
*/
.airline__filters {
  margin: 3.75rem 0; }
  @media (min-width: 700px) {
    .airline__filters {
      display: flex;
      align-items: center;
      justify-content: space-between; } }

.reusable-blocks > div {
  max-width: none !important;
  margin-left: -50vw !important; }

.airline__search--no-results {
  padding-bottom: 0.9375rem;
  margin-bottom: 0.9375rem; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
