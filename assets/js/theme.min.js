window.onload=function(){var sidebar=document.getElementById("toc_nav_holder"),offset=sidebar.offsetTop;function TOCFixedClass(){if(window.scrollY>offset){sidebar.classList.add("fixed-toc");console.log("added")}else{sidebar.classList.remove("fixed-toc")}}document.addEventListener("scroll",(event=>{clearTimeout(timer);let timer=setTimeout(TOCFixedClass,200)}))};window.addEventListener("DOMContentLoaded",(function(event){addSideNotes()}));function toggleDetailsIfSummary(elem){if(elem.tagName=="A"&&elem.parentNode.tagName=="SUMMARY"){const detailsElem=elem.parentNode.parentNode;detailsElem.open=!detailsElem.open}}function addScrollBehaviourToLink(elem){elem.addEventListener("click",(function(event){if(!elem.hash){return}event.stopPropagation();event.preventDefault();toggleDetailsIfSummary(elem);if(elem.hash){document.querySelector(elem.hash).scrollIntoView({behavior:"smooth",block:"center"});history.pushState({},"",elem.hash)}}))}function listAllHeadingsWithIds(){const linkedHeadings=document.querySelectorAll("article h2, article h3");console.log("Listing h2 and h3 for nav headings");for(const heading of linkedHeadings){console.log(heading)}}function addScrollingToToC(){const tocLinks=document.querySelectorAll("nav .toc a");for(const link of tocLinks){addScrollBehaviourToLink(link)}}function addToggleMobileToC(){const tocToggleBtn=document.querySelector("button.tocToggle");const toc=document.querySelector("nav .toc");const tocCloseBtn=document.querySelector(".toc button");const siteNavMenu=document.querySelector(".report-site-nav-menu .nav-menu-primary");const siteNavBtn=document.querySelector(".report-site-nav-menu button");tocToggleBtn.addEventListener("click",(function(event){toc.classList.toggle("visible")}));tocCloseBtn.addEventListener("click",(function(event){toc.classList.remove("visible")}));siteNavBtn.addEventListener("click",(function(event){siteNavMenu.classList.toggle("visible");siteNavMenu.classList.toggle("visually-hidden")}))}function addSideNotes(){const footnotes=document.querySelectorAll("a[rel='footnote']");for(const footnote of footnotes){addSideNote(footnote)}}function addSideNote(footnote){const reference=footnote.hash;const clonedReference=document.querySelector(reference).cloneNode(true);clonedReference.querySelector("a[rev='footnote']").remove();const referenceText=clonedReference.innerHTML;const sideNoteText='<span class="sidenote">'+footnote.innerText+". "+referenceText+"</span>";footnote.insertAdjacentHTML("afterend",sideNoteText)}